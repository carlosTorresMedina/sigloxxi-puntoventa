/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package VistaChance;

import Fachada.Fachada;
import ModeloChance.ItemDto;
import ModeloChance.LoteriaDto;
import ModeloChance.LotxTicketDto;
import ModeloChance.PersonaDto;
import ModeloChance.PlanLoteriaDto;
import ModeloChance.TicketDto;
import java.awt.Color;
import java.awt.Toolkit;
import java.awt.event.KeyEvent;
import java.text.NumberFormat;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.Date;
import javax.swing.JCheckBox;
import javax.swing.JOptionPane;
import javax.swing.JTextField;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author carlos
 */
public class VistaChanceInternalFrame extends javax.swing.JInternalFrame {

    private PersonaDto persona;
    private Fachada fachada;
    private DefaultTableModel tabla;
    private TicketDto ticket;
    private Total total;

    private int valorTemporal = 0;

    /**
     * Creates new form RegistrarChanceInternalFrame
     */
    public VistaChanceInternalFrame(PersonaDto p, Fachada f) {
        initComponents();
        this.getContentPane().setBackground(Color.white);
        this.persona = p;
        this.fachada = f;

    }

    public void iniciarPantalla(){
    this.valorTemporal=0;
        total  = new Total();
    total.total  = this.txtTotal;
     

    this.generarFecha();
     

    this.asignarUsuario();
     

    this.generarTabla();
     

    this.vaciarCampos();
}

private void generarTabla() {
        String tituloTabla[] = {"Loteria", "Seleccionar"};
        // Estos son los tipos de datos de cada columna de la lista
        final Class

[] tiposColumnas = new Class[]{
            java.lang.String.class  

    ,
            java.lang.Boolean.class // <- noten que aquí se especifica que la última columna es un botón
             
    };
     
    this.tabla  = new DefaultTableModel(null, tituloTabla) {
        // Esta variable nos permite conocer de antemano los tipos de datos de cada columna, dentro del TableModel
        Class[] tipos = tiposColumnas;

        @Override
        public Class getColumnClass(int columnIndex) {
                // Este método es invocado por el CellRenderer para saber que dibujar en la celda,
            // observen que estamos retornando la clase que definimos de antemano.
            return tipos[columnIndex];
        }

        @Override
        public boolean isCellEditable(int row, int column) {
            // Sobrescribimos este método para evitar que la columna que contiene los botones sea editada.
            return !(this.getColumnClass(column).equals(java.lang.Boolean.class) || this.getColumnClass(column).equals(java.lang.String.class));
        }
    };
     

    this.tablaChance.setModel (tabla);
     

    this.tablaChance.requestFocus ();
     

    this.tablaChance.getSelectionModel ()
    .setSelectionInterval(0, 0);
         

    this.consultarPlanLoteria();
}

private void consultarPlanLoteria() {
        this.tabla.setRowCount(0);
        this.tabla.fireTableDataChanged();
        ArrayList<LoteriaDto> lista = new ArrayList();
        lista = fachada.listarPlanLoteriaXFecha();
        this.adicionarTablaNormal(lista);
        this.tablaChance.getSelectionModel().setSelectionInterval(0, 0);
    }

    private void adicionarTablaNormal(ArrayList<LoteriaDto> lista) {
        Object registro[] = new Object[8];
        if (lista.isEmpty()) {
            JOptionPane.showMessageDialog(null, "No existen loterias programadas para hoy");
        } else {
            for (LoteriaDto dto : lista) {

                registro[0] = dto.getCodigo() + "-" + dto.getNombre();
                registro[1] = false;

                this.tabla.addRow(registro);
                this.tabla.fireTableDataChanged();

            }
        }
    }

    private void generarFecha() {
        Date hoy = new Date();
        SimpleDateFormat formato = new SimpleDateFormat("yyyy/MM/dd");
        String fecha = formato.format(hoy);
        this.txtFecha.setText(fecha);
    }

    private void asignarUsuario() {
        this.txtUsuario.setText(this.persona.getNuip() + " " + this.persona.getNombre() + " " + this.persona.getApellido());
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        txtFecha = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        txtUsuario = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        cmbMoneda = new javax.swing.JComboBox();
        jPanel2 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tablaChance = new javax.swing.JTable();
        jPanel3 = new javax.swing.JPanel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        txtNumero0 = new javax.swing.JTextField();
        txtNumero1 = new javax.swing.JTextField();
        txtNumero4 = new javax.swing.JTextField();
        txtNumero3 = new javax.swing.JTextField();
        txtNumero2 = new javax.swing.JTextField();
        txtPleno0 = new javax.swing.JTextField();
        txtPleno1 = new javax.swing.JTextField();
        txtPleno2 = new javax.swing.JTextField();
        txtPleno3 = new javax.swing.JTextField();
        txtPleno4 = new javax.swing.JTextField();
        txtCombinado0 = new javax.swing.JTextField();
        txtCombinado1 = new javax.swing.JTextField();
        txtCombinado2 = new javax.swing.JTextField();
        txtCombinado3 = new javax.swing.JTextField();
        txtCombinado4 = new javax.swing.JTextField();
        txtPata0 = new javax.swing.JTextField();
        txtPata1 = new javax.swing.JTextField();
        txtPata2 = new javax.swing.JTextField();
        txtPata3 = new javax.swing.JTextField();
        txtPata4 = new javax.swing.JTextField();
        txtUña0 = new javax.swing.JTextField();
        txtUña1 = new javax.swing.JTextField();
        txtUña2 = new javax.swing.JTextField();
        txtUña3 = new javax.swing.JTextField();
        txtUña4 = new javax.swing.JTextField();
        jButton2 = new javax.swing.JButton();
        jButton1 = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();
        txtNumero7 = new javax.swing.JTextField();
        txtNumero5 = new javax.swing.JTextField();
        txtNumero6 = new javax.swing.JTextField();
        txtNumero8 = new javax.swing.JTextField();
        txtNumero9 = new javax.swing.JTextField();
        txtPleno5 = new javax.swing.JTextField();
        txtPleno6 = new javax.swing.JTextField();
        txtPleno7 = new javax.swing.JTextField();
        txtPleno8 = new javax.swing.JTextField();
        txtPleno9 = new javax.swing.JTextField();
        txtCombinado5 = new javax.swing.JTextField();
        txtCombinado6 = new javax.swing.JTextField();
        txtCombinado7 = new javax.swing.JTextField();
        txtCombinado8 = new javax.swing.JTextField();
        txtCombinado9 = new javax.swing.JTextField();
        txtPata5 = new javax.swing.JTextField();
        txtPata6 = new javax.swing.JTextField();
        txtPata7 = new javax.swing.JTextField();
        txtPata8 = new javax.swing.JTextField();
        txtPata9 = new javax.swing.JTextField();
        txtUña5 = new javax.swing.JTextField();
        txtUña6 = new javax.swing.JTextField();
        txtUña7 = new javax.swing.JTextField();
        txtUña8 = new javax.swing.JTextField();
        txtUña9 = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        txtTotal = new javax.swing.JTextField();

        addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                formKeyPressed(evt);
            }
        });

        jPanel1.setBackground(new java.awt.Color(255, 255, 255));
        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)), "Encabezado"));

        jLabel1.setText("Fecha: ");

        txtFecha.setEnabled(false);

        jLabel2.setText("Usuario: ");

        txtUsuario.setEnabled(false);
        txtUsuario.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtUsuarioActionPerformed(evt);
            }
        });

        jLabel4.setText("Moneda: ");

        cmbMoneda.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Bolivares", "Pesos" }));
        cmbMoneda.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                cmbMonedaKeyPressed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel4)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(cmbMoneda, javax.swing.GroupLayout.PREFERRED_SIZE, 124, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txtFecha, javax.swing.GroupLayout.PREFERRED_SIZE, 141, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jLabel2)
                        .addGap(18, 18, 18)
                        .addComponent(txtUsuario, javax.swing.GroupLayout.PREFERRED_SIZE, 396, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(txtFecha, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel2)
                    .addComponent(txtUsuario, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(cmbMoneda, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel4))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jPanel2.setBackground(new java.awt.Color(255, 255, 255));
        jPanel2.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)), "Loteria"));

        tablaChance.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null},
                {null, null},
                {null, null},
                {null, null}
            },
            new String [] {
                "Loteria", "Selecionar"
            }
        ));
        tablaChance.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                tablaChanceKeyPressed(evt);
            }
        });
        jScrollPane1.setViewportView(tablaChance);

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 316, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                .addContainerGap())
        );

        jPanel3.setBackground(new java.awt.Color(255, 255, 255));
        jPanel3.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)), "Item"));
        jPanel3.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jPanel3KeyPressed(evt);
            }
        });

        jLabel5.setText("Numero");

        jLabel6.setText("Pleno");

        jLabel7.setText("Combinado");

        jLabel8.setText("Pata");

        jLabel9.setText("Uña");

        txtNumero0.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtNumero0KeyPressed(evt);
            }
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtNumero0KeyReleased(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtNumero0KeyTyped(evt);
            }
        });

        txtNumero1.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtNumero1KeyPressed(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtNumero1KeyTyped(evt);
            }
        });

        txtNumero4.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtNumero4KeyPressed(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtNumero4KeyTyped(evt);
            }
        });

        txtNumero3.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtNumero3KeyPressed(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtNumero3KeyTyped(evt);
            }
        });

        txtNumero2.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtNumero2KeyPressed(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtNumero2KeyTyped(evt);
            }
        });

        txtPleno0.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtPleno0KeyPressed(evt);
            }
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtPleno0KeyReleased(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtPleno0KeyTyped(evt);
            }
        });

        txtPleno1.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtPleno1KeyPressed(evt);
            }
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtPleno1KeyReleased(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtPleno1KeyTyped(evt);
            }
        });

        txtPleno2.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtPleno2KeyPressed(evt);
            }
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtPleno2KeyReleased(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtPleno2KeyTyped(evt);
            }
        });

        txtPleno3.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtPleno3KeyPressed(evt);
            }
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtPleno3KeyReleased(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtPleno3KeyTyped(evt);
            }
        });

        txtPleno4.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtPleno4KeyPressed(evt);
            }
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtPleno4KeyReleased(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtPleno4KeyTyped(evt);
            }
        });

        txtCombinado0.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtCombinado0KeyPressed(evt);
            }
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtCombinado0KeyReleased(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtCombinado0KeyTyped(evt);
            }
        });

        txtCombinado1.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtCombinado1KeyPressed(evt);
            }
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtCombinado1KeyReleased(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtCombinado1KeyTyped(evt);
            }
        });

        txtCombinado2.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtCombinado2KeyPressed(evt);
            }
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtCombinado2KeyReleased(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtCombinado2KeyTyped(evt);
            }
        });

        txtCombinado3.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtCombinado3KeyPressed(evt);
            }
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtCombinado3KeyReleased(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtCombinado3KeyTyped(evt);
            }
        });

        txtCombinado4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtCombinado4ActionPerformed(evt);
            }
        });
        txtCombinado4.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtCombinado4KeyPressed(evt);
            }
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtCombinado4KeyReleased(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtCombinado4KeyTyped(evt);
            }
        });

        txtPata0.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtPata0KeyPressed(evt);
            }
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtPata0KeyReleased(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtPata0KeyTyped(evt);
            }
        });

        txtPata1.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtPata1KeyPressed(evt);
            }
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtPata1KeyReleased(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtPata1KeyTyped(evt);
            }
        });

        txtPata2.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtPata2KeyPressed(evt);
            }
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtPata2KeyReleased(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtPata2KeyTyped(evt);
            }
        });

        txtPata3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtPata3ActionPerformed(evt);
            }
        });
        txtPata3.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtPata3KeyPressed(evt);
            }
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtPata3KeyReleased(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtPata3KeyTyped(evt);
            }
        });

        txtPata4.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtPata4KeyPressed(evt);
            }
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtPata4KeyReleased(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtPata4KeyTyped(evt);
            }
        });

        txtUña0.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtUña0KeyPressed(evt);
            }
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtUña0KeyReleased(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtUña0KeyTyped(evt);
            }
        });

        txtUña1.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtUña1KeyPressed(evt);
            }
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtUña1KeyReleased(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtUña1KeyTyped(evt);
            }
        });

        txtUña2.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtUña2KeyPressed(evt);
            }
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtUña2KeyReleased(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtUña2KeyTyped(evt);
            }
        });

        txtUña3.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtUña3KeyPressed(evt);
            }
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtUña3KeyReleased(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtUña3KeyTyped(evt);
            }
        });

        txtUña4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtUña4ActionPerformed(evt);
            }
        });
        txtUña4.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtUña4KeyPressed(evt);
            }
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtUña4KeyReleased(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtUña4KeyTyped(evt);
            }
        });

        jButton2.setText("Imprimir");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jButton1.setText("Salir");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jButton3.setText("Actualizar tabla loteria");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        txtNumero7.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtNumero7KeyPressed(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtNumero7KeyTyped(evt);
            }
        });

        txtNumero5.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtNumero5KeyPressed(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtNumero5KeyTyped(evt);
            }
        });

        txtNumero6.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtNumero6KeyPressed(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtNumero6KeyTyped(evt);
            }
        });

        txtNumero8.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtNumero8KeyPressed(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtNumero8KeyTyped(evt);
            }
        });

        txtNumero9.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtNumero9KeyPressed(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtNumero9KeyTyped(evt);
            }
        });

        txtPleno5.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtPleno5KeyPressed(evt);
            }
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtPleno5KeyReleased(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtPleno5KeyTyped(evt);
            }
        });

        txtPleno6.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtPleno6KeyPressed(evt);
            }
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtPleno6KeyReleased(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtPleno6KeyTyped(evt);
            }
        });

        txtPleno7.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtPleno7KeyPressed(evt);
            }
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtPleno7KeyReleased(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtPleno7KeyTyped(evt);
            }
        });

        txtPleno8.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtPleno8KeyPressed(evt);
            }
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtPleno8KeyReleased(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtPleno8KeyTyped(evt);
            }
        });

        txtPleno9.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtPleno9KeyPressed(evt);
            }
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtPleno9KeyReleased(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtPleno9KeyTyped(evt);
            }
        });

        txtCombinado5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtCombinado5ActionPerformed(evt);
            }
        });
        txtCombinado5.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtCombinado5KeyPressed(evt);
            }
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtCombinado5KeyReleased(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtCombinado5KeyTyped(evt);
            }
        });

        txtCombinado6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtCombinado6ActionPerformed(evt);
            }
        });
        txtCombinado6.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtCombinado6KeyPressed(evt);
            }
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtCombinado6KeyReleased(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtCombinado6KeyTyped(evt);
            }
        });

        txtCombinado7.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtCombinado7ActionPerformed(evt);
            }
        });
        txtCombinado7.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtCombinado7KeyPressed(evt);
            }
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtCombinado7KeyReleased(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtCombinado7KeyTyped(evt);
            }
        });

        txtCombinado8.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtCombinado8ActionPerformed(evt);
            }
        });
        txtCombinado8.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtCombinado8KeyPressed(evt);
            }
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtCombinado8KeyReleased(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtCombinado8KeyTyped(evt);
            }
        });

        txtCombinado9.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtCombinado9ActionPerformed(evt);
            }
        });
        txtCombinado9.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtCombinado9KeyPressed(evt);
            }
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtCombinado9KeyReleased(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtCombinado9KeyTyped(evt);
            }
        });

        txtPata5.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtPata5KeyPressed(evt);
            }
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtPata5KeyReleased(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtPata5KeyTyped(evt);
            }
        });

        txtPata6.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtPata6KeyPressed(evt);
            }
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtPata6KeyReleased(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtPata6KeyTyped(evt);
            }
        });

        txtPata7.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtPata7KeyPressed(evt);
            }
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtPata7KeyReleased(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtPata7KeyTyped(evt);
            }
        });

        txtPata8.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtPata8KeyPressed(evt);
            }
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtPata8KeyReleased(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtPata8KeyTyped(evt);
            }
        });

        txtPata9.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtPata9KeyPressed(evt);
            }
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtPata9KeyReleased(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtPata9KeyTyped(evt);
            }
        });

        txtUña5.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtUña5KeyPressed(evt);
            }
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtUña5KeyReleased(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtUña5KeyTyped(evt);
            }
        });

        txtUña6.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtUña6KeyPressed(evt);
            }
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtUña6KeyReleased(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtUña6KeyTyped(evt);
            }
        });

        txtUña7.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtUña7KeyPressed(evt);
            }
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtUña7KeyReleased(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtUña7KeyTyped(evt);
            }
        });

        txtUña8.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtUña8KeyPressed(evt);
            }
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtUña8KeyReleased(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtUña8KeyTyped(evt);
            }
        });

        txtUña9.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtUña9KeyPressed(evt);
            }
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtUña9KeyReleased(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtUña9KeyTyped(evt);
            }
        });

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addComponent(jButton3)
                        .addGap(128, 128, 128)
                        .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 127, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jButton1)
                        .addContainerGap(24, Short.MAX_VALUE))
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel3Layout.createSequentialGroup()
                                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(jPanel3Layout.createSequentialGroup()
                                        .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 87, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 87, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(jPanel3Layout.createSequentialGroup()
                                        .addComponent(txtNumero0, javax.swing.GroupLayout.PREFERRED_SIZE, 74, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(18, 18, 18)
                                        .addComponent(txtPleno0, javax.swing.GroupLayout.PREFERRED_SIZE, 74, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(jPanel3Layout.createSequentialGroup()
                                        .addComponent(txtNumero1, javax.swing.GroupLayout.PREFERRED_SIZE, 74, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(18, 18, 18)
                                        .addComponent(txtPleno1, javax.swing.GroupLayout.PREFERRED_SIZE, 74, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(jPanel3Layout.createSequentialGroup()
                                        .addComponent(txtNumero2, javax.swing.GroupLayout.PREFERRED_SIZE, 74, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(18, 18, 18)
                                        .addComponent(txtPleno2, javax.swing.GroupLayout.PREFERRED_SIZE, 74, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(jPanel3Layout.createSequentialGroup()
                                        .addComponent(txtNumero3, javax.swing.GroupLayout.PREFERRED_SIZE, 74, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(18, 18, 18)
                                        .addComponent(txtPleno3, javax.swing.GroupLayout.PREFERRED_SIZE, 74, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(jPanel3Layout.createSequentialGroup()
                                        .addComponent(txtNumero4, javax.swing.GroupLayout.PREFERRED_SIZE, 74, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(18, 18, 18)
                                        .addComponent(txtPleno4, javax.swing.GroupLayout.PREFERRED_SIZE, 74, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(jPanel3Layout.createSequentialGroup()
                                        .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 87, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(jLabel8, javax.swing.GroupLayout.PREFERRED_SIZE, 87, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(jLabel9, javax.swing.GroupLayout.PREFERRED_SIZE, 87, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(jPanel3Layout.createSequentialGroup()
                                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                            .addGroup(jPanel3Layout.createSequentialGroup()
                                                .addComponent(txtCombinado4, javax.swing.GroupLayout.PREFERRED_SIZE, 74, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addGap(18, 18, 18)
                                                .addComponent(txtPata4, javax.swing.GroupLayout.PREFERRED_SIZE, 74, javax.swing.GroupLayout.PREFERRED_SIZE))
                                            .addGroup(jPanel3Layout.createSequentialGroup()
                                                .addComponent(txtCombinado0, javax.swing.GroupLayout.PREFERRED_SIZE, 74, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addGap(18, 18, 18)
                                                .addComponent(txtPata0, javax.swing.GroupLayout.PREFERRED_SIZE, 74, javax.swing.GroupLayout.PREFERRED_SIZE))
                                            .addGroup(jPanel3Layout.createSequentialGroup()
                                                .addComponent(txtCombinado1, javax.swing.GroupLayout.PREFERRED_SIZE, 74, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addGap(18, 18, 18)
                                                .addComponent(txtPata1, javax.swing.GroupLayout.PREFERRED_SIZE, 74, javax.swing.GroupLayout.PREFERRED_SIZE))
                                            .addGroup(jPanel3Layout.createSequentialGroup()
                                                .addComponent(txtCombinado2, javax.swing.GroupLayout.PREFERRED_SIZE, 74, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addGap(18, 18, 18)
                                                .addComponent(txtPata2, javax.swing.GroupLayout.PREFERRED_SIZE, 74, javax.swing.GroupLayout.PREFERRED_SIZE))
                                            .addGroup(jPanel3Layout.createSequentialGroup()
                                                .addComponent(txtCombinado3, javax.swing.GroupLayout.PREFERRED_SIZE, 74, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addGap(18, 18, 18)
                                                .addComponent(txtPata3, javax.swing.GroupLayout.PREFERRED_SIZE, 74, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(txtUña1, javax.swing.GroupLayout.PREFERRED_SIZE, 74, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(txtUña0, javax.swing.GroupLayout.PREFERRED_SIZE, 74, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(txtUña2, javax.swing.GroupLayout.PREFERRED_SIZE, 74, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(txtUña3, javax.swing.GroupLayout.PREFERRED_SIZE, 74, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(txtUña4, javax.swing.GroupLayout.PREFERRED_SIZE, 74, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                            .addGroup(jPanel3Layout.createSequentialGroup()
                                .addComponent(txtNumero7, javax.swing.GroupLayout.PREFERRED_SIZE, 74, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(txtPleno7, javax.swing.GroupLayout.PREFERRED_SIZE, 74, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(txtCombinado7, javax.swing.GroupLayout.PREFERRED_SIZE, 74, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(txtPata7, javax.swing.GroupLayout.PREFERRED_SIZE, 74, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(txtUña7, javax.swing.GroupLayout.PREFERRED_SIZE, 74, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel3Layout.createSequentialGroup()
                                .addComponent(txtNumero5, javax.swing.GroupLayout.PREFERRED_SIZE, 74, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(txtPleno5, javax.swing.GroupLayout.PREFERRED_SIZE, 74, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(txtCombinado5, javax.swing.GroupLayout.PREFERRED_SIZE, 74, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(txtPata5, javax.swing.GroupLayout.PREFERRED_SIZE, 74, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(txtUña5, javax.swing.GroupLayout.PREFERRED_SIZE, 74, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel3Layout.createSequentialGroup()
                                .addComponent(txtNumero6, javax.swing.GroupLayout.PREFERRED_SIZE, 74, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(txtPleno6, javax.swing.GroupLayout.PREFERRED_SIZE, 74, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(txtCombinado6, javax.swing.GroupLayout.PREFERRED_SIZE, 74, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(txtPata6, javax.swing.GroupLayout.PREFERRED_SIZE, 74, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(txtUña6, javax.swing.GroupLayout.PREFERRED_SIZE, 74, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel3Layout.createSequentialGroup()
                                .addComponent(txtNumero8, javax.swing.GroupLayout.PREFERRED_SIZE, 74, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(txtPleno8, javax.swing.GroupLayout.PREFERRED_SIZE, 74, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(txtCombinado8, javax.swing.GroupLayout.PREFERRED_SIZE, 74, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(txtPata8, javax.swing.GroupLayout.PREFERRED_SIZE, 74, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(txtUña8, javax.swing.GroupLayout.PREFERRED_SIZE, 74, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel3Layout.createSequentialGroup()
                                .addComponent(txtNumero9, javax.swing.GroupLayout.PREFERRED_SIZE, 74, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(txtPleno9, javax.swing.GroupLayout.PREFERRED_SIZE, 74, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(txtCombinado9, javax.swing.GroupLayout.PREFERRED_SIZE, 74, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(txtPata9, javax.swing.GroupLayout.PREFERRED_SIZE, 74, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(txtUña9, javax.swing.GroupLayout.PREFERRED_SIZE, 74, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(0, 0, Short.MAX_VALUE))))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGap(2, 2, 2)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5)
                    .addComponent(jLabel6)
                    .addComponent(jLabel7)
                    .addComponent(jLabel8)
                    .addComponent(jLabel9))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(txtNumero0, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(txtPleno0, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(txtCombinado0, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(txtPata0, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(txtUña0, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addComponent(txtPata1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(txtCombinado1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(txtUña1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtPleno1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtNumero1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(txtPata2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtUña2, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(txtNumero2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(txtPleno2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(txtCombinado2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(txtUña3, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(txtNumero3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(txtPleno3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(txtCombinado3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(txtPata3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtNumero4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtPleno4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtCombinado4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtPata4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtUña4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtNumero5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtPleno5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtCombinado5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtPata5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtUña5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtNumero6, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtPleno6, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtCombinado6, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtPata6, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtUña6, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtNumero7, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtPleno7, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtCombinado7, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtPata7, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtUña7, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtNumero8, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtPleno8, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtCombinado8, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtPata8, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtUña8, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtNumero9, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtPleno9, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtCombinado9, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtPata9, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtUña9, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(10, 10, 10)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton3)
                    .addComponent(jButton2)
                    .addComponent(jButton1))
                .addContainerGap(20, Short.MAX_VALUE))
        );

        jLabel3.setText("Total: ");

        txtTotal.setEnabled(false);
        txtTotal.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtTotalActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel3)
                        .addGap(18, 18, 18)
                        .addComponent(txtTotal, javax.swing.GroupLayout.PREFERRED_SIZE, 167, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addContainerGap())
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel3)
                            .addComponent(txtTotal, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(28, 28, 28))))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void txtUsuarioActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtUsuarioActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtUsuarioActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
        this.setVisible(false);
    }//GEN-LAST:event_jButton1ActionPerformed

    private void txtNumero0KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtNumero0KeyTyped
        // TODO add your handling code here:
        int num = evt.getKeyChar();

        if (num < '0' || num > '9') {
            evt.consume();
        } else {
            // TODO add your handling code here:
            if (txtNumero0.getText().length() == 4) {
                evt.consume();
                Toolkit.getDefaultToolkit().beep();
            }
        }

    }//GEN-LAST:event_txtNumero0KeyTyped

    private void txtPleno0KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtPleno0KeyTyped
        // TODO add your handling code here:
        int num = evt.getKeyChar();

        if (num < '0' || num > '9') {
            evt.consume();
        }
    }//GEN-LAST:event_txtPleno0KeyTyped

    private void txtCombinado0KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtCombinado0KeyTyped
        // TODO add your handling code here:
        int num = evt.getKeyChar();

        if (num < '0' || num > '9') {
            evt.consume();
        }
    }//GEN-LAST:event_txtCombinado0KeyTyped

    private void txtPata0KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtPata0KeyTyped
        // TODO add your handling code here:
        int num = evt.getKeyChar();

        if (num < '0' || num > '9') {
            evt.consume();
        }
    }//GEN-LAST:event_txtPata0KeyTyped

    private void txtUña0KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtUña0KeyTyped
        // TODO add your handling code here:
        int num = evt.getKeyChar();

        if (num < '0' || num > '9') {
            evt.consume();
        }
    }//GEN-LAST:event_txtUña0KeyTyped

    private void txtNumero1KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtNumero1KeyTyped
        // TODO add your handling code here:
        int num = evt.getKeyChar();

        if (num < '0' || num > '9') {
            evt.consume();
        } else {
            // TODO add your handling code here:
            if (txtNumero1.getText().length() == 4) {
                evt.consume();
                Toolkit.getDefaultToolkit().beep();
            }
        }
    }//GEN-LAST:event_txtNumero1KeyTyped

    private void txtPleno1KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtPleno1KeyTyped
        // TODO add your handling code here:
        int num = evt.getKeyChar();

        if (num < '0' || num > '9') {
            evt.consume();
        }
    }//GEN-LAST:event_txtPleno1KeyTyped

    private void txtCombinado1KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtCombinado1KeyTyped
        // TODO add your handling code here:
        int num = evt.getKeyChar();

        if (num < '0' || num > '9') {
            evt.consume();
        }
    }//GEN-LAST:event_txtCombinado1KeyTyped

    private void txtPata1KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtPata1KeyTyped
        // TODO add your handling code here:
        int num = evt.getKeyChar();

        if (num < '0' || num > '9') {
            evt.consume();
        }
    }//GEN-LAST:event_txtPata1KeyTyped

    private void txtUña1KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtUña1KeyTyped
        // TODO add your handling code here:
        int num = evt.getKeyChar();

        if (num < '0' || num > '9') {
            evt.consume();
        }
    }//GEN-LAST:event_txtUña1KeyTyped

    private void txtNumero2KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtNumero2KeyTyped
        // TODO add your handling code here:
        int num = evt.getKeyChar();

        if (num < '0' || num > '9') {
            evt.consume();
        } else {
            // TODO add your handling code here:
            if (txtNumero2.getText().length() == 4) {
                evt.consume();
                Toolkit.getDefaultToolkit().beep();
            }
        }
    }//GEN-LAST:event_txtNumero2KeyTyped

    private void txtPleno2KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtPleno2KeyTyped
        // TODO add your handling code here:
        int num = evt.getKeyChar();

        if (num < '0' || num > '9') {
            evt.consume();
        }
    }//GEN-LAST:event_txtPleno2KeyTyped

    private void txtCombinado2KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtCombinado2KeyTyped
        // TODO add your handling code here:
        int num = evt.getKeyChar();

        if (num < '0' || num > '9') {
            evt.consume();
        }
    }//GEN-LAST:event_txtCombinado2KeyTyped

    private void txtPata2KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtPata2KeyTyped
        // TODO add your handling code here:
        int num = evt.getKeyChar();

        if (num < '0' || num > '9') {
            evt.consume();
        }
    }//GEN-LAST:event_txtPata2KeyTyped

    private void txtUña2KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtUña2KeyTyped
        // TODO add your handling code here:
        int num = evt.getKeyChar();

        if (num < '0' || num > '9') {
            evt.consume();
        }
    }//GEN-LAST:event_txtUña2KeyTyped

    private void txtNumero3KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtNumero3KeyTyped
        // TODO add your handling code here:
        int num = evt.getKeyChar();

        if (num < '0' || num > '9') {
            evt.consume();
        } else {
            // TODO add your handling code here:
            if (txtNumero3.getText().length() == 4) {
                evt.consume();
                Toolkit.getDefaultToolkit().beep();
            }
        }
    }//GEN-LAST:event_txtNumero3KeyTyped

    private void txtPleno3KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtPleno3KeyTyped
        // TODO add your handling code here:
        int num = evt.getKeyChar();

        if (num < '0' || num > '9') {
            evt.consume();
        }
    }//GEN-LAST:event_txtPleno3KeyTyped

    private void txtCombinado3KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtCombinado3KeyTyped
        // TODO add your handling code here:
        int num = evt.getKeyChar();

        if (num < '0' || num > '9') {
            evt.consume();
        }
    }//GEN-LAST:event_txtCombinado3KeyTyped

    private void txtPata3KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtPata3KeyTyped
        // TODO add your handling code here:
        int num = evt.getKeyChar();

        if (num < '0' || num > '9') {
            evt.consume();
        }
    }//GEN-LAST:event_txtPata3KeyTyped

    private void txtUña3KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtUña3KeyTyped
        // TODO add your handling code here:
        int num = evt.getKeyChar();

        if (num < '0' || num > '9') {
            evt.consume();
        }
    }//GEN-LAST:event_txtUña3KeyTyped

    private void txtNumero4KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtNumero4KeyTyped
        // TODO add your handling code here:
        int num = evt.getKeyChar();

        if (num < '0' || num > '9') {
            evt.consume();
        } else {
            // TODO add your handling code here:
            if (txtNumero4.getText().length() == 4) {
                evt.consume();
                Toolkit.getDefaultToolkit().beep();
            }
        }
    }//GEN-LAST:event_txtNumero4KeyTyped

    private void txtPleno4KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtPleno4KeyTyped
        // TODO add your handling code here:
        int num = evt.getKeyChar();

        if (num < '0' || num > '9') {
            evt.consume();
        }
    }//GEN-LAST:event_txtPleno4KeyTyped

    private void txtCombinado4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtCombinado4ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtCombinado4ActionPerformed

    private void txtCombinado4KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtCombinado4KeyTyped
        int num = evt.getKeyChar();

        if (num < '0' || num > '9') {
            evt.consume();
        }
        // TODO add your handling code here:
    }//GEN-LAST:event_txtCombinado4KeyTyped

    private void txtPata4KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtPata4KeyTyped
        int num = evt.getKeyChar();

        if (num < '0' || num > '9') {
            evt.consume();
        }
        // TODO add your handling code here:
    }//GEN-LAST:event_txtPata4KeyTyped

    private void txtUña4KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtUña4KeyTyped
        int num = evt.getKeyChar();

        if (num < '0' || num > '9') {
            evt.consume();
        }
        // TODO add your handling code here:
    }//GEN-LAST:event_txtUña4KeyTyped

    private void txtPata3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtPata3ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtPata3ActionPerformed

    private void tablaChanceKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_tablaChanceKeyPressed
        // TODO add your handling code here:
        if (evt.getKeyCode() == KeyEvent.VK_SPACE) {
            int fila = this.tablaChance.getSelectedRow();
            boolean valor = (boolean) this.tablaChance.getValueAt(this.tablaChance.getSelectedRow(), 1);

            if (valor) {
                this.tablaChance.setValueAt(false, fila, 1);
                this.total.loterias -= 1;
            } else {
                this.tablaChance.setValueAt(true, fila, 1);
                this.total.loterias += 1;
            }
            this.total.total();

        } else if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            this.txtNumero0.requestFocus();
        } else if (evt.getKeyCode() == KeyEvent.VK_ALT) {
            this.imprimir();
        }

    }//GEN-LAST:event_tablaChanceKeyPressed

    private void imprimir() {
        //creo el ticket
        ticket = new TicketDto();
        this.llenarEncabezado();
        this.recolectarLoteriasEscogidas();
        this.llenarItems();
        //valido
        if (this.ticket.getLoterias().isEmpty()) {
            JOptionPane.showMessageDialog(null, "Debe seleccionar loterias");
            return;
        }
        if (this.ticket.getItems().isEmpty()) {
            JOptionPane.showMessageDialog(null, "Debe digitar numeros y valores.");
            return;
        }
        //verifico existencia de 
        String mensaje = this.valirExistenciaLoteria();
        if (mensaje.isEmpty()) {

            String valor = this.fachada.Imprimir(ticket);

            if (!valor.isEmpty()) {

                this.fachada.impresion(ticket);

                JOptionPane.showMessageDialog(null, "Serial del ticket : " + valor
                        + "\nTotal a pagar " + this.ticket.getVrl_apuesta_sinCalcularFormato());
                this.vaciarCampos();

                this.total = new Total();
                this.total.total = this.txtTotal;
            } else {
                JOptionPane.showMessageDialog(null, "Error en el registro");
            }
        } else {
            JOptionPane.showMessageDialog(null, mensaje);
            this.generarTabla();

        }

    }

    private String valirExistenciaLoteria() {
        String mensaje = "";
        ArrayList<LoteriaDto> lista = fachada.listarPlanLoteriaXFecha();
        int i = 0;
        for (LotxTicketDto lot : ticket.getLoterias()) {
            boolean valor = this.validarListaObjeto(lista, lot);

            if (!valor) {
                System.out.println("Esta fue escogida " + i);
                mensaje += "La loteria " + lot.getCodigoLoteria() + "-" + lot.getNombreLoteria() + " ya esta cerrada \n";
            }
            i++;
        }
        return mensaje;
    }

    private boolean validarListaObjeto(ArrayList<LoteriaDto> lista, LotxTicketDto lot) {
        for (LoteriaDto dto : lista) {

            if (dto.getCodigo() == lot.getCodigoLoteria()) {
                return true;
            }
        }
        return false;
    }

    public void vaciarCampos() {
        this.generarTabla();
        this.vaciarItems();
        this.txtTotal.setText("");
    }

    private void vaciarItems() {
        this.txtNumero0.setText("");
        this.txtNumero1.setText("");
        this.txtNumero2.setText("");
        this.txtNumero3.setText("");
        this.txtNumero4.setText("");
         this.txtNumero5.setText("");
          this.txtNumero6.setText("");
           this.txtNumero7.setText("");
            this.txtNumero8.setText("");
             this.txtNumero9.setText("");
        this.txtPleno0.setText("");
        this.txtPleno1.setText("");
        this.txtPleno2.setText("");
        this.txtPleno3.setText("");
        this.txtPleno4.setText("");
        this.txtPleno5.setText("");
        this.txtPleno6.setText("");
        this.txtPleno7.setText("");
        this.txtPleno8.setText("");
        this.txtPleno9.setText("");
        this.txtPleno0.setEnabled(true);
        this.txtPleno1.setEnabled(true);
        this.txtPleno2.setEnabled(true);
        this.txtPleno3.setEnabled(true);
        this.txtPleno4.setEnabled(true);
        this.txtPleno5.setEnabled(true);
        this.txtPleno6.setEnabled(true);
        this.txtPleno7.setEnabled(true);
        this.txtPleno8.setEnabled(true);
        this.txtPleno9.setEnabled(true);
        this.txtCombinado0.setText("");
        this.txtCombinado1.setText("");
        this.txtCombinado2.setText("");
        this.txtCombinado3.setText("");
        this.txtCombinado4.setText("");
         this.txtCombinado5.setText("");
        this.txtCombinado6.setText("");
        this.txtCombinado7.setText("");
        this.txtCombinado8.setText("");
        this.txtCombinado9.setText("");
        this.txtCombinado0.setEnabled(true);
        this.txtCombinado1.setEnabled(true);
        this.txtCombinado2.setEnabled(true);
        this.txtCombinado3.setEnabled(true);
        this.txtCombinado4.setEnabled(true);
         this.txtCombinado5.setEnabled(true);
        this.txtCombinado6.setEnabled(true);
        this.txtCombinado7.setEnabled(true);
        this.txtCombinado8.setEnabled(true);
        this.txtCombinado9.setEnabled(true);
        this.txtPata0.setText("");
        this.txtPata1.setText("");
        this.txtPata2.setText("");
        this.txtPata3.setText("");
        this.txtPata4.setText("");
         this.txtPata5.setText("");
        this.txtPata6.setText("");
        this.txtPata7.setText("");
        this.txtPata8.setText("");
        this.txtPata9.setText("");
        this.txtPata0.setEnabled(true);
        this.txtPata1.setEnabled(true);
        this.txtPata2.setEnabled(true);
        this.txtPata3.setEnabled(true);
        this.txtPata4.setEnabled(true);
         this.txtPata5.setEnabled(true);
        this.txtPata6.setEnabled(true);
        this.txtPata7.setEnabled(true);
        this.txtPata8.setEnabled(true);
        this.txtPata9.setEnabled(true);
        this.txtUña0.setText("");
        this.txtUña1.setText("");
        this.txtUña2.setText("");
        this.txtUña3.setText("");
        this.txtUña4.setText("");
        this.txtUña5.setText("");
        this.txtUña6.setText("");
        this.txtUña7.setText("");
        this.txtUña8.setText("");
        this.txtUña9.setText("");
        this.txtUña0.setEnabled(true);
        this.txtUña1.setEnabled(true);
        this.txtUña2.setEnabled(true);
        this.txtUña3.setEnabled(true);
        this.txtUña4.setEnabled(true);
         this.txtUña5.setEnabled(true);
        this.txtUña6.setEnabled(true);
        this.txtUña7.setEnabled(true);
        this.txtUña8.setEnabled(true);
        this.txtUña9.setEnabled(true);

    }

    private void llenarItems() {
        //creo los items
        ArrayList<ItemDto> items = new ArrayList();
        ItemDto item = this.retornarItem0();
        if (item != null) {
            items.add(item);
        }
        item = this.retornarItem1();
        if (item != null) {
            items.add(item);
        }
        item = this.retornarItem2();
        if (item != null) {
            items.add(item);
        }
        item = this.retornarItem3();
        if (item != null) {
            items.add(item);
        }
        item = this.retornarItem4();
        if (item != null) {
            items.add(item);
        }
        item = this.retornarItem5();
        if (item != null) {
            items.add(item);
        }
        item = this.retornarItem6();
        if (item != null) {
            items.add(item);
        }
        item = this.retornarItem7();
        if (item != null) {
            items.add(item);
        }
        item = this.retornarItem8();
        if (item != null) {
            items.add(item);
        }
        item = this.retornarItem9();
        if (item != null) {
            items.add(item);
        }
        this.ticket.setItems(items);
    }

    private ItemDto retornarItem0() {
        ItemDto item = null;
        String numero = this.txtNumero0.getText();

        if (numero.isEmpty()) {
            return null;
        }
        String pleno = this.convertirNumeroString(this.txtPleno0.getText());
        String combinado = this.convertirNumeroString(this.txtCombinado0.getText());
        String pata = this.convertirNumeroString(this.txtPata0.getText());
        String uña = this.convertirNumeroString(this.txtUña0.getText());
        int ipleno = 0;
        int icombinado = 0;
        int ipata = 0;
        int iuña = 0;
        int cantidad = 0;
        if (!pleno.isEmpty()) {
            ipleno = Integer.parseInt(pleno);
            cantidad++;
        }
        if (!combinado.isEmpty()) {
            icombinado = Integer.parseInt(combinado);
            cantidad++;
        }
        if (!pata.isEmpty()) {
            ipata = Integer.parseInt(pata);
            cantidad++;
        }
        if (!uña.isEmpty()) {
            iuña = Integer.parseInt(uña);
            cantidad++;
        }

        if (cantidad > 0) {
            item = new ItemDto();
            item.setNumero(numero);
            item.setPleno(ipleno);
            item.setCombinado(icombinado);
            item.setPata(ipata);
            item.setUña(iuña);
            return item;
        }
        return null;
    }

    private ItemDto retornarItem1() {
        ItemDto item = null;
        String numero = this.txtNumero1.getText();

        if (numero.isEmpty()) {
            return null;
        }
        String pleno = this.convertirNumeroString(this.txtPleno1.getText());
        String combinado = this.convertirNumeroString(this.txtCombinado1.getText());
        String pata = this.convertirNumeroString(this.txtPata1.getText());
        String uña = this.convertirNumeroString(this.txtUña1.getText());
        int ipleno = 0;
        int icombinado = 0;
        int ipata = 0;
        int iuña = 0;
        int cantidad = 0;
        if (!pleno.isEmpty()) {
            ipleno = Integer.parseInt(pleno);
            cantidad++;
        }
        if (!combinado.isEmpty()) {
            icombinado = Integer.parseInt(combinado);
            cantidad++;
        }
        if (!pata.isEmpty()) {
            ipata = Integer.parseInt(pata);
            cantidad++;
        }
        if (!uña.isEmpty()) {
            iuña = Integer.parseInt(uña);
            cantidad++;
        }

        if (cantidad > 0) {
            item = new ItemDto();
            item.setNumero(numero);
            item.setPleno(ipleno);
            item.setCombinado(icombinado);
            item.setPata(ipata);
            item.setUña(iuña);
            return item;
        }
        return null;
    }

    private ItemDto retornarItem2() {
        ItemDto item = null;
        String numero = this.txtNumero2.getText();

        if (numero.isEmpty()) {
            return null;
        }
        String pleno = this.convertirNumeroString(this.txtPleno2.getText());
        String combinado = this.convertirNumeroString(this.txtCombinado2.getText());
        String pata = this.convertirNumeroString(this.txtPata2.getText());
        String uña = this.convertirNumeroString(this.txtUña2.getText());
        int ipleno = 0;
        int icombinado = 0;
        int ipata = 0;
        int iuña = 0;
        int cantidad = 0;
        if (!pleno.isEmpty()) {
            ipleno = Integer.parseInt(pleno);
            cantidad++;
        }
        if (!combinado.isEmpty()) {
            icombinado = Integer.parseInt(combinado);
            cantidad++;
        }
        if (!pata.isEmpty()) {
            ipata = Integer.parseInt(pata);
            cantidad++;
        }
        if (!uña.isEmpty()) {
            iuña = Integer.parseInt(uña);
            cantidad++;
        }

        if (cantidad > 0) {
            item = new ItemDto();
            item.setNumero(numero);
            item.setPleno(ipleno);
            item.setCombinado(icombinado);
            item.setPata(ipata);
            item.setUña(iuña);
            return item;
        }
        return null;
    }

    private ItemDto retornarItem3() {
        ItemDto item = null;
        String numero = this.txtNumero3.getText();

        if (numero.isEmpty()) {
            return null;
        }
        String pleno = this.convertirNumeroString(this.txtPleno3.getText());
        String combinado = this.convertirNumeroString(this.txtCombinado3.getText());
        String pata = this.convertirNumeroString(this.txtPata3.getText());
        String uña = this.convertirNumeroString(this.txtUña3.getText());
        int ipleno = 0;
        int icombinado = 0;
        int ipata = 0;
        int iuña = 0;
        int cantidad = 0;
        if (!pleno.isEmpty()) {
            ipleno = Integer.parseInt(pleno);
            cantidad++;
        }
        if (!combinado.isEmpty()) {
            icombinado = Integer.parseInt(combinado);
            cantidad++;
        }
        if (!pata.isEmpty()) {
            ipata = Integer.parseInt(pata);
            cantidad++;
        }
        if (!uña.isEmpty()) {
            iuña = Integer.parseInt(uña);
            cantidad++;
        }

        if (cantidad > 0) {
            item = new ItemDto();
            item.setNumero(numero);
            item.setPleno(ipleno);
            item.setCombinado(icombinado);
            item.setPata(ipata);
            item.setUña(iuña);
            return item;
        }
        return null;
    }

     private ItemDto retornarItem9() {
        ItemDto item = null;
        String numero = this.txtNumero5.getText();

        if (numero.isEmpty()) {
            return null;
        }
        String pleno = this.convertirNumeroString(this.txtPleno9.getText());
        String combinado = this.convertirNumeroString(this.txtCombinado9.getText());
        String pata = this.convertirNumeroString(this.txtPata9.getText());
        String uña = this.convertirNumeroString(this.txtUña9.getText());
        int ipleno = 0;
        int icombinado = 0;
        int ipata = 0;
        int iuña = 0;
        int cantidad = 0;
        if (!pleno.isEmpty()) {
            ipleno = Integer.parseInt(pleno);
            cantidad++;
        }
        if (!combinado.isEmpty()) {
            icombinado = Integer.parseInt(combinado);
            cantidad++;
        }
        if (!pata.isEmpty()) {
            ipata = Integer.parseInt(pata);
            cantidad++;
        }
        if (!uña.isEmpty()) {
            iuña = Integer.parseInt(uña);
            cantidad++;
        }

        if (cantidad > 0) {
            item = new ItemDto();
            item.setNumero(numero);
            item.setPleno(ipleno);
            item.setCombinado(icombinado);
            item.setPata(ipata);
            item.setUña(iuña);
            return item;
        }
        return null;
    }
    
    
     private ItemDto retornarItem8() {
        ItemDto item = null;
        String numero = this.txtNumero8.getText();

        if (numero.isEmpty()) {
            return null;
        }
        String pleno = this.convertirNumeroString(this.txtPleno8.getText());
        String combinado = this.convertirNumeroString(this.txtCombinado8.getText());
        String pata = this.convertirNumeroString(this.txtPata8.getText());
        String uña = this.convertirNumeroString(this.txtUña8.getText());
        int ipleno = 0;
        int icombinado = 0;
        int ipata = 0;
        int iuña = 0;
        int cantidad = 0;
        if (!pleno.isEmpty()) {
            ipleno = Integer.parseInt(pleno);
            cantidad++;
        }
        if (!combinado.isEmpty()) {
            icombinado = Integer.parseInt(combinado);
            cantidad++;
        }
        if (!pata.isEmpty()) {
            ipata = Integer.parseInt(pata);
            cantidad++;
        }
        if (!uña.isEmpty()) {
            iuña = Integer.parseInt(uña);
            cantidad++;
        }

        if (cantidad > 0) {
            item = new ItemDto();
            item.setNumero(numero);
            item.setPleno(ipleno);
            item.setCombinado(icombinado);
            item.setPata(ipata);
            item.setUña(iuña);
            return item;
        }
        return null;
    }
    
    
     private ItemDto retornarItem7() {
        ItemDto item = null;
        String numero = this.txtNumero7.getText();

        if (numero.isEmpty()) {
            return null;
        }
        String pleno = this.convertirNumeroString(this.txtPleno7.getText());
        String combinado = this.convertirNumeroString(this.txtCombinado7.getText());
        String pata = this.convertirNumeroString(this.txtPata7.getText());
        String uña = this.convertirNumeroString(this.txtUña7.getText());
        int ipleno = 0;
        int icombinado = 0;
        int ipata = 0;
        int iuña = 0;
        int cantidad = 0;
        if (!pleno.isEmpty()) {
            ipleno = Integer.parseInt(pleno);
            cantidad++;
        }
        if (!combinado.isEmpty()) {
            icombinado = Integer.parseInt(combinado);
            cantidad++;
        }
        if (!pata.isEmpty()) {
            ipata = Integer.parseInt(pata);
            cantidad++;
        }
        if (!uña.isEmpty()) {
            iuña = Integer.parseInt(uña);
            cantidad++;
        }

        if (cantidad > 0) {
            item = new ItemDto();
            item.setNumero(numero);
            item.setPleno(ipleno);
            item.setCombinado(icombinado);
            item.setPata(ipata);
            item.setUña(iuña);
            return item;
        }
        return null;
    }
    
     private ItemDto retornarItem6() {
        ItemDto item = null;
        String numero = this.txtNumero6.getText();

        if (numero.isEmpty()) {
            return null;
        }
        String pleno = this.convertirNumeroString(this.txtPleno6.getText());
        String combinado = this.convertirNumeroString(this.txtCombinado6.getText());
        String pata = this.convertirNumeroString(this.txtPata6.getText());
        String uña = this.convertirNumeroString(this.txtUña6.getText());
        int ipleno = 0;
        int icombinado = 0;
        int ipata = 0;
        int iuña = 0;
        int cantidad = 0;
        if (!pleno.isEmpty()) {
            ipleno = Integer.parseInt(pleno);
            cantidad++;
        }
        if (!combinado.isEmpty()) {
            icombinado = Integer.parseInt(combinado);
            cantidad++;
        }
        if (!pata.isEmpty()) {
            ipata = Integer.parseInt(pata);
            cantidad++;
        }
        if (!uña.isEmpty()) {
            iuña = Integer.parseInt(uña);
            cantidad++;
        }

        if (cantidad > 0) {
            item = new ItemDto();
            item.setNumero(numero);
            item.setPleno(ipleno);
            item.setCombinado(icombinado);
            item.setPata(ipata);
            item.setUña(iuña);
            return item;
        }
        return null;
    }
    
    private ItemDto retornarItem5() {
        ItemDto item = null;
        String numero = this.txtNumero5.getText();

        if (numero.isEmpty()) {
            return null;
        }
        String pleno = this.convertirNumeroString(this.txtPleno5.getText());
        String combinado = this.convertirNumeroString(this.txtCombinado5.getText());
        String pata = this.convertirNumeroString(this.txtPata5.getText());
        String uña = this.convertirNumeroString(this.txtUña5.getText());
        int ipleno = 0;
        int icombinado = 0;
        int ipata = 0;
        int iuña = 0;
        int cantidad = 0;
        if (!pleno.isEmpty()) {
            ipleno = Integer.parseInt(pleno);
            cantidad++;
        }
        if (!combinado.isEmpty()) {
            icombinado = Integer.parseInt(combinado);
            cantidad++;
        }
        if (!pata.isEmpty()) {
            ipata = Integer.parseInt(pata);
            cantidad++;
        }
        if (!uña.isEmpty()) {
            iuña = Integer.parseInt(uña);
            cantidad++;
        }

        if (cantidad > 0) {
            item = new ItemDto();
            item.setNumero(numero);
            item.setPleno(ipleno);
            item.setCombinado(icombinado);
            item.setPata(ipata);
            item.setUña(iuña);
            return item;
        }
        return null;
    }
    
    private ItemDto retornarItem4() {
        ItemDto item = null;
        String numero = this.txtNumero4.getText();

        if (numero.isEmpty()) {
            return null;
        }
        String pleno = this.convertirNumeroString(this.txtPleno4.getText());
        String combinado = this.convertirNumeroString(this.txtCombinado4.getText());
        String pata = this.convertirNumeroString(this.txtPata4.getText());
        String uña = this.convertirNumeroString(this.txtUña4.getText());
        int ipleno = 0;
        int icombinado = 0;
        int ipata = 0;
        int iuña = 0;
        int cantidad = 0;
        if (!pleno.isEmpty()) {
            ipleno = Integer.parseInt(pleno);
            cantidad++;
        }
        if (!combinado.isEmpty()) {
            icombinado = Integer.parseInt(combinado);
            cantidad++;
        }
        if (!pata.isEmpty()) {
            ipata = Integer.parseInt(pata);
            cantidad++;
        }
        if (!uña.isEmpty()) {
            iuña = Integer.parseInt(uña);
            cantidad++;
        }

        if (cantidad > 0) {
            item = new ItemDto();
            item.setNumero(numero);
            item.setPleno(ipleno);
            item.setCombinado(icombinado);
            item.setPata(ipata);
            item.setUña(iuña);
            return item;
        }
        return null;
    }
    
    
    

    private void recolectarLoteriasEscogidas() {
        //creo las loteriasxticket
        ArrayList<LotxTicketDto> loteriasTicket = new ArrayList();
        int cantidad = this.tablaChance.getRowCount();
        while (cantidad > 0) {
            //aqui  voy validando fila por fila y donde sea true lo adicionno a la lista de loteriasxticket
            boolean seleccion = (boolean) this.tablaChance.getValueAt(cantidad - 1, 1);

            if (seleccion) {
                String codigo = String.valueOf(this.tablaChance.getValueAt(cantidad - 1, 0));
                loteriasTicket.add(new LotxTicketDto(codigo));
            }
            cantidad--;
        }
        this.ticket.setLoterias(loteriasTicket);
    }

    private void llenarEncabezado() {

        String fecha = this.txtFecha.getText();
        String moneda = this.cmbMoneda.getSelectedItem().toString();
        ticket.setPersona(persona);
        ticket.setFecha(fecha);
        ticket.setMoneda(moneda);
    }

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        // TODO add your handling code here:
        this.generarTabla();
    }//GEN-LAST:event_jButton3ActionPerformed

    private boolean validarNumeroRepetido(String numero) {
        return (numero.equals("1111") || numero.equals("2222") || numero.equals("3333") || numero.equals("4444") || numero.equals("5555") || numero.equals("6666") || numero.equals("7777") || numero.equals("8888") || numero.equals("9999") || numero.equals("0000"));
    }

    private void txtNumero0KeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtNumero0KeyPressed
        // TODO add your handling code here:
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            if (this.txtNumero0.getText().length() == 4 || this.txtNumero0.getText().length() == 3) {

                if (this.validarNumeroRepetido(this.txtNumero0.getText())) {
                    this.txtPleno0.setEnabled(true);
                    this.txtCombinado0.setEnabled(false);
                    this.txtPata0.setEnabled(true);
                    this.txtUña0.setEnabled(true);
                    this.txtPleno0.requestFocus();
                } else {
                    this.txtPleno0.setEnabled(true);
                    this.txtCombinado0.setEnabled(true);
                    this.txtPata0.setEnabled(true);
                    this.txtUña0.setEnabled(true);
                    this.txtPleno0.requestFocus();
                }
            }
            if (this.txtNumero0.getText().length() == 2) {
                this.txtPleno0.setText("");
                this.txtCombinado0.setText("");
                this.txtPleno0.setEnabled(false);
                this.txtCombinado0.setEnabled(false);
                this.txtPata0.setEnabled(true);
                this.txtUña0.setEnabled(true);
                this.txtPata0.requestFocus();
            }
            if (this.txtNumero0.getText().length() == 1) {
                this.txtPleno0.setText("");
                this.txtCombinado0.setText("");
                this.txtPata0.setText("");
                this.txtPleno0.setEnabled(false);
                this.txtCombinado0.setEnabled(false);
                this.txtPata0.setEnabled(false);
                this.txtUña0.setEnabled(true);
                this.txtUña0.requestFocus();
            }

        } else if (evt.getKeyCode() == KeyEvent.VK_ALT) {
            this.imprimir();
        }
    }//GEN-LAST:event_txtNumero0KeyPressed

    private String convertirNumeroString(String valor) {
        String fina = valor.replace(".", "");
        return fina;
    }


    private void txtPleno0KeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtPleno0KeyPressed
        // TODO add your handling code here:
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            if (this.txtCombinado0.isEnabled()) {
                this.txtCombinado0.requestFocus();
            } else {
                this.txtPata0.requestFocus();
            }
            if (this.txtPleno0.getText().isEmpty()) {
                this.total.pleno0 = 0;
            } else {
                
            NumberFormat formatoNumero = NumberFormat.getNumberInstance();
            String cadena = this.txtPleno0.getText().replace(".", "");
            this.txtPleno0.setText(formatoNumero.format(Integer.parseInt(cadena)));
            
                this.total.pleno0 = Integer.parseInt(this.convertirNumeroString(this.txtPleno0.getText()));
                this.valorTemporal=Integer.parseInt(this.convertirNumeroString(this.txtPleno0.getText()));
            }
            this.total.total();

        } else if (evt.getKeyCode() == KeyEvent.VK_ALT) {
            this.imprimir();
        }else if(evt.getKeyCode() == KeyEvent.VK_UP){
        
        if(this.valorTemporal!=0){
         this.txtPleno0.setText(this.valorTemporal+"");
         this.txtPleno0.selectAll();  // y luego en la siguiente linea pones
         
        }
        }
    }//GEN-LAST:event_txtPleno0KeyPressed

    private void txtCombinado0KeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtCombinado0KeyPressed
        // TODO add your handling code here:
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            this.txtPata0.requestFocus();
            if (this.txtCombinado0.getText().isEmpty()) {
                this.total.combinado0 = 0;
            } else {
               
            NumberFormat formatoNumero = NumberFormat.getNumberInstance();
            String cadena = this.txtCombinado0.getText().replace(".", "");
            this.txtCombinado0.setText(formatoNumero.format(Integer.parseInt(cadena)));
        
                this.total.combinado0 = Integer.parseInt(this.convertirNumeroString(this.txtCombinado0.getText()));
                this.valorTemporal= Integer.parseInt(this.convertirNumeroString(this.txtCombinado0.getText()));
            }
            this.total.total();
        } else if (evt.getKeyCode() == KeyEvent.VK_ALT) {
            this.imprimir();
        }else if(evt.getKeyCode() == KeyEvent.VK_UP){
        
        if(this.valorTemporal!=0){
         this.txtCombinado0.setText(this.valorTemporal+"");
         this.txtCombinado0.selectAll();  // y luego en la siguiente linea pones
         
        }
        }
    }//GEN-LAST:event_txtCombinado0KeyPressed

    private void txtPata0KeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtPata0KeyPressed
        // TODO add your handling code here:
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            this.txtUña0.requestFocus();
            if (this.txtPata0.getText().isEmpty()) {
                this.total.pata0 = 0;
            } else {
                    NumberFormat formatoNumero = NumberFormat.getNumberInstance();
            String cadena = this.txtPata0.getText().replace(".", "");
            this.txtPata0.setText(formatoNumero.format(Integer.parseInt(cadena)));
                this.total.pata0 = Integer.parseInt(this.convertirNumeroString(this.txtPata0.getText()));
                this.valorTemporal = Integer.parseInt(this.convertirNumeroString(this.txtPata0.getText()));
            }
            this.total.total();
        } else if (evt.getKeyCode() == KeyEvent.VK_ALT) {
            this.imprimir();
        }else if(evt.getKeyCode() == KeyEvent.VK_UP){
        
        if(this.valorTemporal!=0){
         this.txtPata0.setText(this.valorTemporal+"");
         this.txtPata0.selectAll();  // y luego en la siguiente linea pones
         
        }
        }
    }//GEN-LAST:event_txtPata0KeyPressed

    private void txtUña0KeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtUña0KeyPressed
        // TODO add your handling code here:
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            this.txtNumero1.requestFocus();
            if (this.txtUña0.getText().isEmpty()) {
                this.total.uña0 = 0;
            } else {
                 NumberFormat formatoNumero = NumberFormat.getNumberInstance();
            String cadena = this.txtUña0.getText().replace(".", "");
            this.txtUña0.setText(formatoNumero.format(Integer.parseInt(cadena)));
                this.total.uña0 = Integer.parseInt(this.convertirNumeroString(this.txtUña0.getText()));
                this.valorTemporal=Integer.parseInt(this.convertirNumeroString(this.txtUña0.getText()));
            }
            this.total.total();
        } else if (evt.getKeyCode() == KeyEvent.VK_ALT) {
            this.imprimir();
        }else if(evt.getKeyCode() == KeyEvent.VK_UP){
        
        if(this.valorTemporal!=0){
         this.txtUña0.setText(this.valorTemporal+"");
         this.txtUña0.selectAll();  // y luego en la siguiente linea pones
         
        }
        }
    }//GEN-LAST:event_txtUña0KeyPressed

    private void txtNumero1KeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtNumero1KeyPressed
        // TODO add your handling code here:
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            if (this.txtNumero1.getText().length() == 4 || this.txtNumero1.getText().length() == 3) {
                if (this.validarNumeroRepetido(this.txtNumero1.getText())) {
                    this.txtPleno1.setEnabled(true);
                    this.txtCombinado1.setEnabled(false);
                    this.txtPata1.setEnabled(true);
                    this.txtUña1.setEnabled(true);
                    this.txtPleno1.requestFocus();
                } else {
                    this.txtPleno1.setEnabled(true);
                    this.txtCombinado1.setEnabled(true);
                    this.txtPata1.setEnabled(true);
                    this.txtUña1.setEnabled(true);
                    this.txtPleno1.requestFocus();
                }
            }
            if (this.txtNumero1.getText().length() == 2) {
                this.txtPleno1.setText("");
                this.txtCombinado1.setText("");
                this.txtPleno1.setEnabled(false);
                this.txtCombinado1.setEnabled(false);
                this.txtPata1.setEnabled(true);
                this.txtUña1.setEnabled(true);
                this.txtPata1.requestFocus();
            }
            if (this.txtNumero1.getText().length() == 1) {
                this.txtPleno1.setText("");
                this.txtCombinado1.setText("");
                this.txtPata1.setText("");
                this.txtPleno1.setEnabled(false);
                this.txtCombinado1.setEnabled(false);
                this.txtPata1.setEnabled(false);
                this.txtUña1.setEnabled(true);
                this.txtUña1.requestFocus();
            }

        } else if (evt.getKeyCode() == KeyEvent.VK_ALT) {
            this.imprimir();
        }
    }//GEN-LAST:event_txtNumero1KeyPressed

    private void txtPleno1KeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtPleno1KeyPressed
        // TODO add your handling code here:
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            if (this.txtCombinado1.isEnabled()) {
                this.txtCombinado1.requestFocus();
            } else {
                this.txtPata1.requestFocus();
            }
            if (this.txtPleno1.getText().isEmpty()) {
                this.total.pleno1 = 0;
            } else {
                  NumberFormat formatoNumero = NumberFormat.getNumberInstance();
            String cadena = this.txtPleno1.getText().replace(".", "");
            this.txtPleno1.setText(formatoNumero.format(Integer.parseInt(cadena)));
                this.total.pleno1 = Integer.parseInt(this.convertirNumeroString(this.txtPleno1.getText()));
                this.valorTemporal=Integer.parseInt(this.convertirNumeroString(this.txtPleno1.getText()));
            }
            this.total.total();
        } else if (evt.getKeyCode() == KeyEvent.VK_ALT) {
            this.imprimir();
        }else if(evt.getKeyCode() == KeyEvent.VK_UP){
        
        if(this.valorTemporal!=0){
         this.txtPleno1.setText(this.valorTemporal+"");
         this.txtPleno1.selectAll();  // y luego en la siguiente linea pones
         
        }
        }
    }//GEN-LAST:event_txtPleno1KeyPressed

    private void txtCombinado1KeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtCombinado1KeyPressed
        // TODO add your handling code here:
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            this.txtPata1.requestFocus();
            if (this.txtCombinado1.getText().isEmpty()) {
                this.total.combinado1 = 0;
            } else {
                  NumberFormat formatoNumero = NumberFormat.getNumberInstance();
            String cadena = this.txtCombinado1.getText().replace(".", "");
            this.txtCombinado1.setText(formatoNumero.format(Integer.parseInt(cadena)));
                this.total.combinado1 = Integer.parseInt(this.convertirNumeroString(this.txtCombinado1.getText()));
                this.valorTemporal=Integer.parseInt(this.convertirNumeroString(this.txtCombinado1.getText()));
            }
            this.total.total();
        } else if (evt.getKeyCode() == KeyEvent.VK_ALT) {
            this.imprimir();
        }else if(evt.getKeyCode() == KeyEvent.VK_UP){
        
        if(this.valorTemporal!=0){
         this.txtCombinado1.setText(this.valorTemporal+"");
         this.txtCombinado1.selectAll();  // y luego en la siguiente linea pones
         
        }
        }
    }//GEN-LAST:event_txtCombinado1KeyPressed

    private void txtPata1KeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtPata1KeyPressed
        // TODO add your handling code here:
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            this.txtUña1.requestFocus();
            if (this.txtPata1.getText().isEmpty()) {
                this.total.pata1 = 0;
            } else {
                 NumberFormat formatoNumero = NumberFormat.getNumberInstance();
            String cadena = this.txtPata1.getText().replace(".", "");
            this.txtPata1.setText(formatoNumero.format(Integer.parseInt(cadena)));
                this.total.pata1 = Integer.parseInt(this.convertirNumeroString(this.txtPata1.getText()));
            this.valorTemporal=Integer.parseInt(this.convertirNumeroString(this.txtPata1.getText()));
            }
            this.total.total();
        } else if (evt.getKeyCode() == KeyEvent.VK_ALT) {
            this.imprimir();
        }else if(evt.getKeyCode() == KeyEvent.VK_UP){
        
        if(this.valorTemporal!=0){
         this.txtPata1.setText(this.valorTemporal+"");
         this.txtPata1.selectAll();  // y luego en la siguiente linea pones
         
        }
        }
    }//GEN-LAST:event_txtPata1KeyPressed

    private void txtUña1KeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtUña1KeyPressed
        // TODO add your handling code here:
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            this.txtNumero2.requestFocus();
            if (this.txtUña1.getText().isEmpty()) {
                this.total.uña1 = 0;
            } else {
                      NumberFormat formatoNumero = NumberFormat.getNumberInstance();
            String cadena = this.txtUña1.getText().replace(".", "");
            this.txtUña1.setText(formatoNumero.format(Integer.parseInt(cadena)));
                this.total.uña1 = Integer.parseInt(this.convertirNumeroString(this.txtUña1.getText()));
            this.valorTemporal=Integer.parseInt(this.convertirNumeroString(this.txtUña1.getText()));
            }
            this.total.total();
        } else if(evt.getKeyCode() == KeyEvent.VK_UP){
        
        if(this.valorTemporal!=0){
         this.txtUña1.setText(this.valorTemporal+"");
         this.txtUña1.selectAll();  // y luego en la siguiente linea pones
         
        }
        }
    }//GEN-LAST:event_txtUña1KeyPressed

    private void txtNumero2KeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtNumero2KeyPressed
        // TODO add your handling code here:
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            if (this.txtNumero2.getText().length() == 4 || this.txtNumero2.getText().length() == 3) {
                if (this.validarNumeroRepetido(this.txtNumero2.getText())) {
                    this.txtPleno2.setEnabled(true);
                    this.txtCombinado2.setEnabled(false);
                    this.txtPata2.setEnabled(true);
                    this.txtUña2.setEnabled(true);
                    this.txtPleno2.requestFocus();
                } else {
                    this.txtPleno2.setEnabled(true);
                    this.txtCombinado2.setEnabled(true);
                    this.txtPata2.setEnabled(true);
                    this.txtUña2.setEnabled(true);
                    this.txtPleno2.requestFocus();
                }
            }
            if (this.txtNumero2.getText().length() == 2) {
                this.txtPleno2.setText("");
                this.txtCombinado2.setText("");
                this.txtPleno2.setEnabled(false);
                this.txtCombinado2.setEnabled(false);
                this.txtPata2.setEnabled(true);
                this.txtUña2.setEnabled(true);
                this.txtPata2.requestFocus();
            }
            if (this.txtNumero2.getText().length() == 1) {
                this.txtPleno2.setText("");
                this.txtCombinado2.setText("");
                this.txtPata2.setText("");
                this.txtPleno2.setEnabled(false);
                this.txtCombinado2.setEnabled(false);
                this.txtPata2.setEnabled(false);
                this.txtUña2.setEnabled(true);
                this.txtUña2.requestFocus();
            }

        } else if (evt.getKeyCode() == KeyEvent.VK_ALT) {
            this.imprimir();
        }
    }//GEN-LAST:event_txtNumero2KeyPressed

    private void txtPleno2KeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtPleno2KeyPressed
        // TODO add your handling code here:
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            if (this.txtCombinado2.isEnabled()) {
                this.txtCombinado2.requestFocus();
            } else {
                this.txtPata2.requestFocus();
            }
            if (this.txtPleno2.getText().isEmpty()) {
                this.total.pleno2 = 0;
            } else {
                        NumberFormat formatoNumero = NumberFormat.getNumberInstance();
            String cadena = this.txtPleno2.getText().replace(".", "");
            this.txtPleno2.setText(formatoNumero.format(Integer.parseInt(cadena)));
                this.total.pleno2 = Integer.parseInt(this.convertirNumeroString(this.txtPleno2.getText()));
            this.valorTemporal=Integer.parseInt(this.convertirNumeroString(this.txtPleno2.getText()));
            }
            this.total.total();
        } else if (evt.getKeyCode() == KeyEvent.VK_ALT) {
            this.imprimir();
        }else if(evt.getKeyCode() == KeyEvent.VK_UP){
        
        if(this.valorTemporal!=0){
         this.txtPleno2.setText(this.valorTemporal+"");
         this.txtPleno2.selectAll();  // y luego en la siguiente linea pones
         
        }
        }
    }//GEN-LAST:event_txtPleno2KeyPressed

    private void txtCombinado2KeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtCombinado2KeyPressed
        // TODO add your handling code here:
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            this.txtPata2.requestFocus();
            if (this.txtCombinado2.getText().isEmpty()) {
                this.total.combinado2 = 0;
            } else {
                    NumberFormat formatoNumero = NumberFormat.getNumberInstance();
            String cadena = this.txtCombinado2.getText().replace(".", "");
            this.txtCombinado2.setText(formatoNumero.format(Integer.parseInt(cadena)));
                this.total.combinado2 = Integer.parseInt(this.convertirNumeroString(this.txtCombinado2.getText()));
            
            this.valorTemporal= Integer.parseInt(this.convertirNumeroString(this.txtCombinado2.getText()));
            }
            this.total.total();
        } else if (evt.getKeyCode() == KeyEvent.VK_ALT) {
            this.imprimir();
        }else if(evt.getKeyCode() == KeyEvent.VK_UP){
        
        if(this.valorTemporal!=0){
         this.txtCombinado2.setText(this.valorTemporal+"");
         this.txtCombinado2.selectAll();  // y luego en la siguiente linea pones
         
        }
        }
    }//GEN-LAST:event_txtCombinado2KeyPressed

    private void txtPata2KeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtPata2KeyPressed
        // TODO add your handling code here:
       
        
        
          if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            this.txtUña2.requestFocus();
            if (this.txtPata2.getText().isEmpty()) {
                this.total.pata2 = 0;
            } else {
    NumberFormat formatoNumero = NumberFormat.getNumberInstance();
            String cadena = this.txtPata2.getText().replace(".", "");
            this.txtPata2.setText(formatoNumero.format(Integer.parseInt(cadena)));
                this.total.pata2 = Integer.parseInt(this.convertirNumeroString(this.txtPata2.getText()));
            this.valorTemporal=Integer.parseInt(this.convertirNumeroString(this.txtPata2.getText()));;
            }
            this.total.total();
        } else if (evt.getKeyCode() == KeyEvent.VK_ALT) {
            this.imprimir();
        }else if(evt.getKeyCode() == KeyEvent.VK_UP){
        
        if(this.valorTemporal!=0){
         this.txtPata2.setText(this.valorTemporal+"");
         this.txtPata2.selectAll();  // y luego en la siguiente linea pones
         
        }
        }
    }//GEN-LAST:event_txtPata2KeyPressed

    private void txtUña2KeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtUña2KeyPressed
        // TODO add your handling code here:
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            this.txtNumero3.requestFocus();
            if (this.txtUña2.getText().isEmpty()) {
                this.total.uña2 = 0;
            } else {
                  NumberFormat formatoNumero = NumberFormat.getNumberInstance();
            String cadena = this.txtUña2.getText().replace(".", "");
            this.txtUña2.setText(formatoNumero.format(Integer.parseInt(cadena)));
                this.total.uña2 = Integer.parseInt(this.convertirNumeroString(this.txtUña2.getText()));
            this.valorTemporal= Integer.parseInt(this.convertirNumeroString(this.txtUña2.getText()));
            }
            this.total.total();
        } else if (evt.getKeyCode() == KeyEvent.VK_ALT) {
            this.imprimir();
        }else if(evt.getKeyCode() == KeyEvent.VK_UP){
        
        if(this.valorTemporal!=0){
         this.txtUña2.setText(this.valorTemporal+"");
         this.txtUña2.selectAll();  // y luego en la siguiente linea pones
         
        }
        }
    }//GEN-LAST:event_txtUña2KeyPressed

    private void txtNumero3KeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtNumero3KeyPressed
        // TODO add your handling code here:
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            if (this.txtNumero3.getText().length() == 4 || this.txtNumero3.getText().length() == 3) {
                if (this.validarNumeroRepetido(this.txtNumero3.getText())) {
                    this.txtPleno3.setEnabled(true);
                    this.txtCombinado3.setEnabled(false);
                    this.txtPata3.setEnabled(true);
                    this.txtUña3.setEnabled(true);
                    this.txtPleno3.requestFocus();
                } else {
                    this.txtPleno3.setEnabled(true);
                    this.txtCombinado3.setEnabled(true);
                    this.txtPata3.setEnabled(true);
                    this.txtUña3.setEnabled(true);
                    this.txtPleno3.requestFocus();
                }
            }
            if (this.txtNumero3.getText().length() == 2) {
                this.txtPleno3.setText("");
                this.txtCombinado3.setText("");
                this.txtPleno3.setEnabled(false);
                this.txtCombinado3.setEnabled(false);
                this.txtPata3.setEnabled(true);
                this.txtUña3.setEnabled(true);
                this.txtPata3.requestFocus();
            }
            if (this.txtNumero3.getText().length() == 1) {
                this.txtPleno3.setText("");
                this.txtCombinado3.setText("");
                this.txtPata3.setText("");
                this.txtPleno3.setEnabled(false);
                this.txtCombinado3.setEnabled(false);
                this.txtPata3.setEnabled(false);
                this.txtUña3.setEnabled(true);
                this.txtUña3.requestFocus();
            }

        } else if (evt.getKeyCode() == KeyEvent.VK_ALT) {
            this.imprimir();
        }
    }//GEN-LAST:event_txtNumero3KeyPressed

    private void txtPleno3KeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtPleno3KeyPressed
        // TODO add your handling code here:
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            if (this.txtCombinado3.isEnabled()) {
                this.txtCombinado3.requestFocus();
            } else {
                this.txtPata3.requestFocus();
            }
            if (this.txtPleno3.getText().isEmpty()) {
                this.total.pleno3 = 0;
            } else {
                  NumberFormat formatoNumero = NumberFormat.getNumberInstance();
            String cadena = this.txtPleno3.getText().replace(".", "");
            this.txtPleno3.setText(formatoNumero.format(Integer.parseInt(cadena)));
                this.total.pleno3 = Integer.parseInt(this.convertirNumeroString(this.txtPleno3.getText()));
            this.valorTemporal=Integer.parseInt(this.convertirNumeroString(this.txtPleno3.getText()));
            }
            this.total.total();
        } else if (evt.getKeyCode() == KeyEvent.VK_ALT) {
            this.imprimir();
        }else if(evt.getKeyCode() == KeyEvent.VK_UP){
        
        if(this.valorTemporal!=0){
         this.txtPleno3.setText(this.valorTemporal+"");
         this.txtPleno3.selectAll();  // y luego en la siguiente linea pones
         
        }
        }
    }//GEN-LAST:event_txtPleno3KeyPressed

    private void txtCombinado3KeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtCombinado3KeyPressed
        // TODO add your handling code here:
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            this.txtPata3.requestFocus();
            if (this.txtCombinado3.getText().isEmpty()) {
                this.total.combinado3 = 0;
            } else {
                 NumberFormat formatoNumero = NumberFormat.getNumberInstance();
            String cadena = this.txtCombinado3.getText().replace(".", "");
            this.txtCombinado3.setText(formatoNumero.format(Integer.parseInt(cadena)));
                this.total.combinado3 = Integer.parseInt(this.convertirNumeroString(this.txtCombinado3.getText()));
            this.valorTemporal=Integer.parseInt(this.convertirNumeroString(this.txtCombinado3.getText()));
            }
            this.total.total();
        } else if (evt.getKeyCode() == KeyEvent.VK_ALT) {
            this.imprimir();
        }else if(evt.getKeyCode() == KeyEvent.VK_UP){
        
        if(this.valorTemporal!=0){
         this.txtCombinado3.setText(this.valorTemporal+"");
         this.txtCombinado3.selectAll();  // y luego en la siguiente linea pones
         
        }
        }

    }//GEN-LAST:event_txtCombinado3KeyPressed

    private void txtPata3KeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtPata3KeyPressed
        // TODO add your handling code here:
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            this.txtUña3.requestFocus();
            if (this.txtPata3.getText().isEmpty()) {
                this.total.pata3 = 0;
            } else {
                  NumberFormat formatoNumero = NumberFormat.getNumberInstance();
            String cadena = this.txtPata3.getText().replace(".", "");
            this.txtPata3.setText(formatoNumero.format(Integer.parseInt(cadena)));
                this.total.pata3 = Integer.parseInt(this.convertirNumeroString(this.txtPata3.getText()));
                this.valorTemporal=Integer.parseInt(this.convertirNumeroString(this.txtPata3.getText()));
            }
            this.total.total();
        } else if (evt.getKeyCode() == KeyEvent.VK_ALT) {
            this.imprimir();
        }else if(evt.getKeyCode() == KeyEvent.VK_UP){
        
        if(this.valorTemporal!=0){
         this.txtPata3.setText(this.valorTemporal+"");
         this.txtPata3.selectAll();  // y luego en la siguiente linea pones
         
        }
        }
    }//GEN-LAST:event_txtPata3KeyPressed

    private void txtUña3KeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtUña3KeyPressed
        // TODO add your handling code here:
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            this.txtNumero4.requestFocus();
            if (this.txtUña3.getText().isEmpty()) {
                this.total.uña3 = 0;
            } else {
                 NumberFormat formatoNumero = NumberFormat.getNumberInstance();
            String cadena = this.txtUña3.getText().replace(".", "");
            this.txtUña3.setText(formatoNumero.format(Integer.parseInt(cadena)));
                this.total.uña3 = Integer.parseInt(this.convertirNumeroString(this.txtUña3.getText()));
            this.valorTemporal=Integer.parseInt(this.convertirNumeroString(this.txtUña3.getText()));
            }
            this.total.total();
        } else if (evt.getKeyCode() == KeyEvent.VK_ALT) {
            this.imprimir();
        }else if(evt.getKeyCode() == KeyEvent.VK_UP){
        
        if(this.valorTemporal!=0){
         this.txtUña3.setText(this.valorTemporal+"");
         this.txtUña3.selectAll();  // y luego en la siguiente linea pones
         
        }
        }
    }//GEN-LAST:event_txtUña3KeyPressed

    private void txtNumero4KeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtNumero4KeyPressed
        // TODO add your handling code here:
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            if (this.txtNumero4.getText().length() == 4 || this.txtNumero4.getText().length() == 3) {
                if (this.validarNumeroRepetido(this.txtNumero4.getText())) {
                    this.txtPleno4.setEnabled(true);
                    this.txtCombinado4.setEnabled(false);
                    this.txtPata4.setEnabled(true);
                    this.txtUña4.setEnabled(true);
                    this.txtPleno4.requestFocus();
                } else {
                    this.txtPleno4.setEnabled(true);
                    this.txtCombinado4.setEnabled(true);
                    this.txtPata4.setEnabled(true);
                    this.txtUña4.setEnabled(true);
                    this.txtPleno4.requestFocus();
                }
            }
            if (this.txtNumero4.getText().length() == 2) {
                this.txtPleno4.setText("");
                this.txtCombinado4.setText("");
                this.txtPleno4.setEnabled(false);
                this.txtCombinado4.setEnabled(false);
                this.txtPata4.setEnabled(true);
                this.txtUña4.setEnabled(true);
                this.txtPata4.requestFocus();
            }
            if (this.txtNumero4.getText().length() == 1) {
                this.txtPleno4.setText("");
                this.txtCombinado4.setText("");
                this.txtPata4.setText("");
                this.txtPleno4.setEnabled(false);
                this.txtCombinado4.setEnabled(false);
                this.txtPata4.setEnabled(false);
                this.txtUña4.setEnabled(true);
                this.txtUña4.requestFocus();
            }

        } else if (evt.getKeyCode() == KeyEvent.VK_ALT) {
            this.imprimir();
        }
    }//GEN-LAST:event_txtNumero4KeyPressed

    private void txtPleno4KeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtPleno4KeyPressed
        // TODO add your handling code here:
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            if (this.txtCombinado4.isEnabled()) {
                this.txtCombinado4.requestFocus();
            } else {
                this.txtPata4.requestFocus();
            }
            if (this.txtPleno4.getText().isEmpty()) {
                this.total.pleno4 = 0;
            } else {
                 NumberFormat formatoNumero = NumberFormat.getNumberInstance();
            String cadena = this.txtPleno4.getText().replace(".", "");
            this.txtPleno4.setText(formatoNumero.format(Integer.parseInt(cadena)));
                this.total.pleno4 = Integer.parseInt(this.convertirNumeroString(this.txtPleno4.getText()));
                this.valorTemporal=Integer.parseInt(this.convertirNumeroString(this.txtPleno4.getText()));
            }
            this.total.total();
        } else if (evt.getKeyCode() == KeyEvent.VK_ALT) {
            this.imprimir();
        }else if(evt.getKeyCode() == KeyEvent.VK_UP){
        
        if(this.valorTemporal!=0){
         this.txtPleno4.setText(this.valorTemporal+"");
         this.txtPleno4.selectAll();  // y luego en la siguiente linea pones
         
        }
        }
    }//GEN-LAST:event_txtPleno4KeyPressed

    private void txtCombinado4KeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtCombinado4KeyPressed
        // TODO add your handling code here:
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            this.txtPata4.requestFocus();
            if (this.txtCombinado4.getText().isEmpty()) {
                this.total.combinado4 = 0;
            } else {
                  NumberFormat formatoNumero = NumberFormat.getNumberInstance();
            String cadena = this.txtCombinado4.getText().replace(".", "");
            this.txtCombinado4.setText(formatoNumero.format(Integer.parseInt(cadena)));
                this.total.combinado4 = Integer.parseInt(this.convertirNumeroString(this.txtCombinado4.getText()));
            this.valorTemporal= Integer.parseInt(this.convertirNumeroString(this.txtCombinado4.getText()));
            }
            this.total.total();
        } else if (evt.getKeyCode() == KeyEvent.VK_ALT) {
            this.imprimir();
        }else if(evt.getKeyCode() == KeyEvent.VK_UP){
        
        if(this.valorTemporal!=0){
         this.txtCombinado4.setText(this.valorTemporal+"");
         this.txtCombinado4.selectAll();  // y luego en la siguiente linea pones
         
        }
        }
    }//GEN-LAST:event_txtCombinado4KeyPressed

    private void txtPata4KeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtPata4KeyPressed
        // TODO add your handling code here:
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            this.txtUña4.requestFocus();
            if (this.txtPata4.getText().isEmpty()) {
                this.total.pata4 = 0;
            } else {
                  NumberFormat formatoNumero = NumberFormat.getNumberInstance();
            String cadena = this.txtPata4.getText().replace(".", "");
            this.txtPata4.setText(formatoNumero.format(Integer.parseInt(cadena)));
                this.total.pata4 = Integer.parseInt(this.convertirNumeroString(this.txtPata4.getText()));
            this.valorTemporal=Integer.parseInt(this.convertirNumeroString(this.txtPata4.getText()));
            }
            this.total.total();
        } else if (evt.getKeyCode() == KeyEvent.VK_ALT) {
            this.imprimir();
        }else if(evt.getKeyCode() == KeyEvent.VK_UP){
        
        if(this.valorTemporal!=0){
         this.txtPata4.setText(this.valorTemporal+"");
         this.txtPata4.selectAll();  // y luego en la siguiente linea pones
         
        }
        }
    }//GEN-LAST:event_txtPata4KeyPressed

    private void formKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_formKeyPressed
        // TODO add your handling code here:

    }//GEN-LAST:event_formKeyPressed

    private void jPanel3KeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jPanel3KeyPressed
        // TODO add your handling code here:

    }//GEN-LAST:event_jPanel3KeyPressed

    private void cmbMonedaKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_cmbMonedaKeyPressed
        // TODO add your handling code here:
        if (evt.getKeyCode() == KeyEvent.VK_ALT) {
            this.imprimir();
        }
    }//GEN-LAST:event_cmbMonedaKeyPressed

    private void txtUña4KeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtUña4KeyPressed
        // TODO add your handling code here:
           
           
             if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            this.txtNumero5.requestFocus();
            if (this.txtUña4.getText().isEmpty()) {
                this.total.uña4 = 0;
            } else {
                   NumberFormat formatoNumero = NumberFormat.getNumberInstance();
            String cadena = this.txtUña4.getText().replace(".", "");
            this.txtUña4.setText(formatoNumero.format(Integer.parseInt(cadena)));
                this.total.uña4 = Integer.parseInt(this.convertirNumeroString(this.txtUña4.getText()));
            this.valorTemporal= Integer.parseInt(this.convertirNumeroString(this.txtUña4.getText()));
            }
            this.total.total();
        } else if (evt.getKeyCode() == KeyEvent.VK_ALT) {
            this.imprimir();
        }else if(evt.getKeyCode() == KeyEvent.VK_UP){
        
        if(this.valorTemporal!=0){
         this.txtUña4.setText(this.valorTemporal+"");
         this.txtUña4.selectAll();  // y luego en la siguiente linea pones
         
        }
        }
        
        
      
    }//GEN-LAST:event_txtUña4KeyPressed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        // TODO add your handling code here:
        this.imprimir();
    }//GEN-LAST:event_jButton2ActionPerformed

    private void txtNumero0KeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtNumero0KeyReleased
        // TODO add your handling code here:

    }//GEN-LAST:event_txtNumero0KeyReleased

    private void txtPleno0KeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtPleno0KeyReleased
        // TODO add your handling code here:

    }//GEN-LAST:event_txtPleno0KeyReleased

    private void txtCombinado0KeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtCombinado0KeyReleased
        // TODO add your handling code here:
       
    }//GEN-LAST:event_txtCombinado0KeyReleased

    private void txtPata0KeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtPata0KeyReleased
        // TODO add your handling code here:
      
    }//GEN-LAST:event_txtPata0KeyReleased

    private void txtUña0KeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtUña0KeyReleased
        // TODO add your handling code here:
      
    }//GEN-LAST:event_txtUña0KeyReleased

    private void txtPleno1KeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtPleno1KeyReleased
        // TODO add your handling code here:
        
    }//GEN-LAST:event_txtPleno1KeyReleased

    private void txtCombinado1KeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtCombinado1KeyReleased
        // TODO add your handling code here:
       
    }//GEN-LAST:event_txtCombinado1KeyReleased

    private void txtPata1KeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtPata1KeyReleased
        // TODO add your handling code here:
       
    }//GEN-LAST:event_txtPata1KeyReleased

    private void txtUña1KeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtUña1KeyReleased
        // TODO add your handling code here:
     
    }//GEN-LAST:event_txtUña1KeyReleased

    private void txtPleno2KeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtPleno2KeyReleased
        // TODO add your handling code here:
       
    }//GEN-LAST:event_txtPleno2KeyReleased

    private void txtCombinado2KeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtCombinado2KeyReleased
        // TODO add your handling code here:
       
    }//GEN-LAST:event_txtCombinado2KeyReleased

    private void txtPata2KeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtPata2KeyReleased
        // TODO add your handling code here:
        
    }//GEN-LAST:event_txtPata2KeyReleased

    private void txtUña2KeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtUña2KeyReleased
        // TODO add your handling code here:
        
    }//GEN-LAST:event_txtUña2KeyReleased

    private void txtPleno3KeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtPleno3KeyReleased
        // TODO add your handling code here:
       
    }//GEN-LAST:event_txtPleno3KeyReleased

    private void txtCombinado3KeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtCombinado3KeyReleased
        // TODO add your handling code here:
     
    }//GEN-LAST:event_txtCombinado3KeyReleased

    private void txtPata3KeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtPata3KeyReleased
        // TODO add your handling code here:
        
    }//GEN-LAST:event_txtPata3KeyReleased

    private void txtUña3KeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtUña3KeyReleased
        // TODO add your handling code here:
      
    }//GEN-LAST:event_txtUña3KeyReleased

    private void txtPleno4KeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtPleno4KeyReleased
        // TODO add your handling code here:
       
    }//GEN-LAST:event_txtPleno4KeyReleased

    private void txtCombinado4KeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtCombinado4KeyReleased
        // TODO add your handling code here:
       
    }//GEN-LAST:event_txtCombinado4KeyReleased

    private void txtPata4KeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtPata4KeyReleased
        // TODO add your handling code here:
       
    }//GEN-LAST:event_txtPata4KeyReleased

    private void txtUña4KeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtUña4KeyReleased
        // TODO add your handling code here:
      
    }//GEN-LAST:event_txtUña4KeyReleased

    private void txtTotalActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtTotalActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtTotalActionPerformed

    private void txtNumero7KeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtNumero7KeyPressed
        // TODO add your handling code here:
         if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            if (this.txtNumero7.getText().length() == 4 || this.txtNumero7.getText().length() == 3) {

                if (this.validarNumeroRepetido(this.txtNumero7.getText())) {
                    this.txtPleno7.setEnabled(true);
                    this.txtCombinado7.setEnabled(false);
                    this.txtPata7.setEnabled(true);
                    this.txtUña7.setEnabled(true);
                    this.txtPleno7.requestFocus();
                } else {
                    this.txtPleno7.setEnabled(true);
                    this.txtCombinado7.setEnabled(true);
                    this.txtPata7.setEnabled(true);
                    this.txtUña7.setEnabled(true);
                    this.txtPleno7.requestFocus();
                }
            }
            if (this.txtNumero7.getText().length() == 2) {
                this.txtPleno7.setText("");
                this.txtCombinado7.setText("");
                this.txtPleno7.setEnabled(false);
                this.txtCombinado7.setEnabled(false);
                this.txtPata7.setEnabled(true);
                this.txtUña7.setEnabled(true);
                this.txtPata7.requestFocus();
            }
            if (this.txtNumero7.getText().length() == 1) {
                this.txtPleno7.setText("");
                this.txtCombinado7.setText("");
                this.txtPata7.setText("");
                this.txtPleno7.setEnabled(false);
                this.txtCombinado7.setEnabled(false);
                this.txtPata7.setEnabled(false);
                this.txtUña7.setEnabled(true);
                this.txtUña7.requestFocus();
            }

        } else if (evt.getKeyCode() == KeyEvent.VK_ALT) {
            this.imprimir();
        }
    }//GEN-LAST:event_txtNumero7KeyPressed

    private void txtNumero7KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtNumero7KeyTyped
        // TODO add your handling code here:
         int num = evt.getKeyChar();

        if (num < '0' || num > '9') {
            evt.consume();
        } else {
            // TODO add your handling code here:
            if (txtNumero7.getText().length() == 4) {
                evt.consume();
                Toolkit.getDefaultToolkit().beep();
            }
        }
    }//GEN-LAST:event_txtNumero7KeyTyped

    private void txtNumero5KeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtNumero5KeyPressed
        // TODO add your handling code here:
         if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            if (this.txtNumero5.getText().length() == 4 || this.txtNumero5.getText().length() == 3) {

                if (this.validarNumeroRepetido(this.txtNumero5.getText())) {
                    this.txtPleno5.setEnabled(true);
                    this.txtCombinado5.setEnabled(false);
                    this.txtPata5.setEnabled(true);
                    this.txtUña5.setEnabled(true);
                    this.txtPleno5.requestFocus();
                } else {
                    this.txtPleno5.setEnabled(true);
                    this.txtCombinado5.setEnabled(true);
                    this.txtPata5.setEnabled(true);
                    this.txtUña5.setEnabled(true);
                    this.txtPleno5.requestFocus();
                }
            }
            if (this.txtNumero5.getText().length() == 2) {
                this.txtPleno5.setText("");
                this.txtCombinado5.setText("");
                this.txtPleno5.setEnabled(false);
                this.txtCombinado5.setEnabled(false);
                this.txtPata5.setEnabled(true);
                this.txtUña5.setEnabled(true);
                this.txtPata5.requestFocus();
            }
            if (this.txtNumero5.getText().length() == 1) {
                this.txtPleno5.setText("");
                this.txtCombinado5.setText("");
                this.txtPata5.setText("");
                this.txtPleno5.setEnabled(false);
                this.txtCombinado5.setEnabled(false);
                this.txtPata5.setEnabled(false);
                this.txtUña5.setEnabled(true);
                this.txtUña5.requestFocus();
            }

        } else if (evt.getKeyCode() == KeyEvent.VK_ALT) {
            this.imprimir();
        }
    }//GEN-LAST:event_txtNumero5KeyPressed

    private void txtNumero5KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtNumero5KeyTyped
        // TODO add your handling code here:
         int num = evt.getKeyChar();

        if (num < '0' || num > '9') {
            evt.consume();
        } else {
            // TODO add your handling code here:
            if (txtNumero5.getText().length() == 4) {
                evt.consume();
                Toolkit.getDefaultToolkit().beep();
            }
        }
    }//GEN-LAST:event_txtNumero5KeyTyped

    private void txtNumero6KeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtNumero6KeyPressed
        // TODO add your handling code here:
         if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            if (this.txtNumero6.getText().length() == 4 || this.txtNumero6.getText().length() == 3) {

                if (this.validarNumeroRepetido(this.txtNumero6.getText())) {
                    this.txtPleno6.setEnabled(true);
                    this.txtCombinado6.setEnabled(false);
                    this.txtPata6.setEnabled(true);
                    this.txtUña6.setEnabled(true);
                    this.txtPleno6.requestFocus();
                } else {
                    this.txtPleno6.setEnabled(true);
                    this.txtCombinado6.setEnabled(true);
                    this.txtPata6.setEnabled(true);
                    this.txtUña6.setEnabled(true);
                    this.txtPleno6.requestFocus();
                }
            }
            if (this.txtNumero6.getText().length() == 2) {
                this.txtPleno6.setText("");
                this.txtCombinado6.setText("");
                this.txtPleno6.setEnabled(false);
                this.txtCombinado6.setEnabled(false);
                this.txtPata6.setEnabled(true);
                this.txtUña6.setEnabled(true);
                this.txtPata6.requestFocus();
            }
            if (this.txtNumero6.getText().length() == 1) {
                this.txtPleno6.setText("");
                this.txtCombinado6.setText("");
                this.txtPata6.setText("");
                this.txtPleno6.setEnabled(false);
                this.txtCombinado6.setEnabled(false);
                this.txtPata6.setEnabled(false);
                this.txtUña6.setEnabled(true);
                this.txtUña6.requestFocus();
            }

        } else if (evt.getKeyCode() == KeyEvent.VK_ALT) {
            this.imprimir();
        }
    }//GEN-LAST:event_txtNumero6KeyPressed

    private void txtNumero6KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtNumero6KeyTyped
        // TODO add your handling code here:
         int num = evt.getKeyChar();

        if (num < '0' || num > '9') {
            evt.consume();
        } else {
            // TODO add your handling code here:
            if (txtNumero6.getText().length() == 4) {
                evt.consume();
                Toolkit.getDefaultToolkit().beep();
            }
        }
    }//GEN-LAST:event_txtNumero6KeyTyped

    private void txtNumero8KeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtNumero8KeyPressed
        // TODO add your handling code here:
         if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            if (this.txtNumero8.getText().length() == 4 || this.txtNumero8.getText().length() == 3) {

                if (this.validarNumeroRepetido(this.txtNumero8.getText())) {
                    this.txtPleno8.setEnabled(true);
                    this.txtCombinado8.setEnabled(false);
                    this.txtPata8.setEnabled(true);
                    this.txtUña8.setEnabled(true);
                    this.txtPleno8.requestFocus();
                } else {
                    this.txtPleno8.setEnabled(true);
                    this.txtCombinado8.setEnabled(true);
                    this.txtPata8.setEnabled(true);
                    this.txtUña8.setEnabled(true);
                    this.txtPleno8.requestFocus();
                }
            }
            if (this.txtNumero8.getText().length() == 2) {
                this.txtPleno8.setText("");
                this.txtCombinado8.setText("");
                this.txtPleno8.setEnabled(false);
                this.txtCombinado8.setEnabled(false);
                this.txtPata8.setEnabled(true);
                this.txtUña8.setEnabled(true);
                this.txtPata8.requestFocus();
            }
            if (this.txtNumero8.getText().length() == 1) {
                this.txtPleno8.setText("");
                this.txtCombinado8.setText("");
                this.txtPata8.setText("");
                this.txtPleno8.setEnabled(false);
                this.txtCombinado8.setEnabled(false);
                this.txtPata8.setEnabled(false);
                this.txtUña8.setEnabled(true);
                this.txtUña8.requestFocus();
            }

        } else if (evt.getKeyCode() == KeyEvent.VK_ALT) {
            this.imprimir();
        }
    }//GEN-LAST:event_txtNumero8KeyPressed

    private void txtNumero8KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtNumero8KeyTyped
        // TODO add your handling code here:
         int num = evt.getKeyChar();

        if (num < '0' || num > '9') {
            evt.consume();
        } else {
            // TODO add your handling code here:
            if (txtNumero8.getText().length() == 4) {
                evt.consume();
                Toolkit.getDefaultToolkit().beep();
            }
        }
    }//GEN-LAST:event_txtNumero8KeyTyped

    private void txtNumero9KeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtNumero9KeyPressed
        // TODO add your handling code here:
         if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            if (this.txtNumero9.getText().length() == 4 || this.txtNumero9.getText().length() == 3) {

                if (this.validarNumeroRepetido(this.txtNumero9.getText())) {
                    this.txtPleno9.setEnabled(true);
                    this.txtCombinado9.setEnabled(false);
                    this.txtPata9.setEnabled(true);
                    this.txtUña9.setEnabled(true);
                    this.txtPleno9.requestFocus();
                } else {
                    this.txtPleno9.setEnabled(true);
                    this.txtCombinado9.setEnabled(true);
                    this.txtPata9.setEnabled(true);
                    this.txtUña9.setEnabled(true);
                    this.txtPleno9.requestFocus();
                }
            }
            if (this.txtNumero9.getText().length() == 2) {
                this.txtPleno9.setText("");
                this.txtCombinado9.setText("");
                this.txtPleno9.setEnabled(false);
                this.txtCombinado9.setEnabled(false);
                this.txtPata9.setEnabled(true);
                this.txtUña9.setEnabled(true);
                this.txtPata9.requestFocus();
            }
            if (this.txtNumero9.getText().length() == 1) {
                this.txtPleno9.setText("");
                this.txtCombinado9.setText("");
                this.txtPata9.setText("");
                this.txtPleno9.setEnabled(false);
                this.txtCombinado9.setEnabled(false);
                this.txtPata9.setEnabled(false);
                this.txtUña9.setEnabled(true);
                this.txtUña9.requestFocus();
            }

        } else if (evt.getKeyCode() == KeyEvent.VK_ALT) {
            this.imprimir();
        }
    }//GEN-LAST:event_txtNumero9KeyPressed

    private void txtNumero9KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtNumero9KeyTyped
        // TODO add your handling code here:
         int num = evt.getKeyChar();

        if (num < '0' || num > '9') {
            evt.consume();
        } else {
            // TODO add your handling code here:
            if (txtNumero9.getText().length() == 4) {
                evt.consume();
                Toolkit.getDefaultToolkit().beep();
            }
        }
    }//GEN-LAST:event_txtNumero9KeyTyped

    private void txtPleno5KeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtPleno5KeyPressed
        // TODO add your handling code here:
          if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            if (this.txtCombinado5.isEnabled()) {
                this.txtCombinado5.requestFocus();
            } else {
                this.txtPata5.requestFocus();
            }
            if (this.txtPleno5.getText().isEmpty()) {
                this.total.pleno5 = 0;
            } else {
           NumberFormat formatoNumero = NumberFormat.getNumberInstance();
            String cadena = this.txtPleno5.getText().replace(".", "");
            this.txtPleno5.setText(formatoNumero.format(Integer.parseInt(cadena)));
                this.total.pleno5 = Integer.parseInt(this.convertirNumeroString(this.txtPleno5.getText()));
            this.valorTemporal= Integer.parseInt(this.convertirNumeroString(this.txtPleno5.getText()));
            }
            this.total.total();
        } else if (evt.getKeyCode() == KeyEvent.VK_ALT) {
            this.imprimir();
        }else if(evt.getKeyCode() == KeyEvent.VK_UP){
        
        if(this.valorTemporal!=0){
         this.txtPleno5.setText(this.valorTemporal+"");
         this.txtPleno5.selectAll();  // y luego en la siguiente linea pones
         
        }
        }
    }//GEN-LAST:event_txtPleno5KeyPressed

    private void txtPleno5KeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtPleno5KeyReleased
        // TODO add your handling code here:
          
    }//GEN-LAST:event_txtPleno5KeyReleased

    private void txtPleno5KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtPleno5KeyTyped
        // TODO add your handling code here:
         int num = evt.getKeyChar();

        if (num < '0' || num > '9') {
            evt.consume();
        }
    }//GEN-LAST:event_txtPleno5KeyTyped

    private void txtPleno6KeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtPleno6KeyPressed
        // TODO add your handling code here:
          if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            if (this.txtCombinado6.isEnabled()) {
                this.txtCombinado6.requestFocus();
            } else {
                this.txtPata6.requestFocus();
            }
            if (this.txtPleno6.getText().isEmpty()) {
                this.total.pleno6 = 0;
            } else {
                 NumberFormat formatoNumero = NumberFormat.getNumberInstance();
            String cadena = this.txtPleno6.getText().replace(".", "");
            this.txtPleno6.setText(formatoNumero.format(Integer.parseInt(cadena)));
                this.total.pleno6 = Integer.parseInt(this.convertirNumeroString(this.txtPleno6.getText()));
            this.valorTemporal= Integer.parseInt(this.convertirNumeroString(this.txtPleno6.getText()));
            }
            this.total.total();
        } else if (evt.getKeyCode() == KeyEvent.VK_ALT) {
            this.imprimir();
        }else if(evt.getKeyCode() == KeyEvent.VK_UP){
        
        if(this.valorTemporal!=0){
         this.txtPleno6.setText(this.valorTemporal+"");
         this.txtPleno6.selectAll();  // y luego en la siguiente linea pones
         
        }
        }
    }//GEN-LAST:event_txtPleno6KeyPressed

    private void txtPleno6KeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtPleno6KeyReleased
        // TODO add your handling code here:
        
    }//GEN-LAST:event_txtPleno6KeyReleased

    private void txtPleno6KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtPleno6KeyTyped
        // TODO add your handling code here:
         int num = evt.getKeyChar();

        if (num < '0' || num > '9') {
            evt.consume();
        }
    }//GEN-LAST:event_txtPleno6KeyTyped

    private void txtPleno7KeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtPleno7KeyPressed
        // TODO add your handling code here:
          if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            if (this.txtCombinado7.isEnabled()) {
                this.txtCombinado7.requestFocus();
            } else {
                this.txtPata7.requestFocus();
            }
            if (this.txtPleno7.getText().isEmpty()) {
                this.total.pleno7 = 0;
            } else {
                 NumberFormat formatoNumero = NumberFormat.getNumberInstance();
            String cadena = this.txtPleno7.getText().replace(".", "");
            this.txtPleno7.setText(formatoNumero.format(Integer.parseInt(cadena)));
                this.total.pleno7 = Integer.parseInt(this.convertirNumeroString(this.txtPleno7.getText()));
            this.valorTemporal=Integer.parseInt(this.convertirNumeroString(this.txtPleno7.getText()));
            }
            this.total.total();
        } else if (evt.getKeyCode() == KeyEvent.VK_ALT) {
            this.imprimir();
        }else if(evt.getKeyCode() == KeyEvent.VK_UP){
        
        if(this.valorTemporal!=0){
         this.txtPleno7.setText(this.valorTemporal+"");
         this.txtPleno7.selectAll();  // y luego en la siguiente linea pones
         
        }
        }
    }//GEN-LAST:event_txtPleno7KeyPressed

    private void txtPleno7KeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtPleno7KeyReleased
        // TODO add your handling code here:
        
    }//GEN-LAST:event_txtPleno7KeyReleased

    private void txtPleno7KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtPleno7KeyTyped
        // TODO add your handling code here:
         int num = evt.getKeyChar();

        if (num < '0' || num > '9') {
            evt.consume();
        }
    }//GEN-LAST:event_txtPleno7KeyTyped

    private void txtPleno8KeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtPleno8KeyPressed
        // TODO add your handling code here:
          if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            if (this.txtCombinado8.isEnabled()) {
                this.txtCombinado8.requestFocus();
            } else {
                this.txtPata8.requestFocus();
            }
            if (this.txtPleno8.getText().isEmpty()) {
                this.total.pleno8 = 0;
            } else {
                    NumberFormat formatoNumero = NumberFormat.getNumberInstance();
            String cadena = this.txtPleno8.getText().replace(".", "");
            this.txtPleno8.setText(formatoNumero.format(Integer.parseInt(cadena)));
                this.total.pleno8 = Integer.parseInt(this.convertirNumeroString(this.txtPleno8.getText()));
            this.valorTemporal=Integer.parseInt(this.convertirNumeroString(this.txtPleno8.getText()));
            }
            this.total.total();
        } else if (evt.getKeyCode() == KeyEvent.VK_ALT) {
            this.imprimir();
        }else if(evt.getKeyCode() == KeyEvent.VK_UP){
        
        if(this.valorTemporal!=0){
         this.txtPleno8.setText(this.valorTemporal+"");
         this.txtPleno8.selectAll();  // y luego en la siguiente linea pones
         
        }
        }
    }//GEN-LAST:event_txtPleno8KeyPressed

    private void txtPleno8KeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtPleno8KeyReleased
        // TODO add your handling code here:
         
    }//GEN-LAST:event_txtPleno8KeyReleased

    private void txtPleno8KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtPleno8KeyTyped
        // TODO add your handling code here:
         int num = evt.getKeyChar();

        if (num < '0' || num > '9') {
            evt.consume();
        }
    }//GEN-LAST:event_txtPleno8KeyTyped

    private void txtPleno9KeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtPleno9KeyPressed
        // TODO add your handling code here:
          if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            if (this.txtCombinado9.isEnabled()) {
                this.txtCombinado9.requestFocus();
            } else {
                this.txtPata9.requestFocus();
            }
            if (this.txtPleno9.getText().isEmpty()) {
                this.total.pleno9 = 0;
            } else {
                 NumberFormat formatoNumero = NumberFormat.getNumberInstance();
            String cadena = this.txtPleno9.getText().replace(".", "");
            this.txtPleno9.setText(formatoNumero.format(Integer.parseInt(cadena)));
                this.total.pleno9 = Integer.parseInt(this.convertirNumeroString(this.txtPleno9.getText()));
            this.valorTemporal= Integer.parseInt(this.convertirNumeroString(this.txtPleno9.getText()));
            }
            this.total.total();
        } else if (evt.getKeyCode() == KeyEvent.VK_ALT) {
            this.imprimir();
        }else if(evt.getKeyCode() == KeyEvent.VK_UP){
        
        if(this.valorTemporal!=0){
         this.txtPleno9.setText(this.valorTemporal+"");
         this.txtPleno9.selectAll();  // y luego en la siguiente linea pones
         
        }
        }
    }//GEN-LAST:event_txtPleno9KeyPressed

    private void txtPleno9KeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtPleno9KeyReleased
        // TODO add your handling code here:
         
    }//GEN-LAST:event_txtPleno9KeyReleased

    private void txtPleno9KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtPleno9KeyTyped
        // TODO add your handling code here:
         int num = evt.getKeyChar();

        if (num < '0' || num > '9') {
            evt.consume();
        }
    }//GEN-LAST:event_txtPleno9KeyTyped

    private void txtCombinado5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtCombinado5ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtCombinado5ActionPerformed

    private void txtCombinado5KeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtCombinado5KeyPressed
        // TODO add your handling code here:
          if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            this.txtPata5.requestFocus();
            if (this.txtCombinado5.getText().isEmpty()) {
                this.total.combinado5 = 0;
            } else {
                  NumberFormat formatoNumero = NumberFormat.getNumberInstance();
            String cadena = this.txtCombinado5.getText().replace(".", "");
            this.txtCombinado5.setText(formatoNumero.format(Integer.parseInt(cadena)));
                this.total.combinado5 = Integer.parseInt(this.convertirNumeroString(this.txtCombinado5.getText()));
            this.valorTemporal=Integer.parseInt(this.convertirNumeroString(this.txtCombinado5.getText()));
            }
            this.total.total();
        } else if (evt.getKeyCode() == KeyEvent.VK_ALT) {
            this.imprimir();
        }else if(evt.getKeyCode() == KeyEvent.VK_UP){
        
        if(this.valorTemporal!=0){
         this.txtCombinado5.setText(this.valorTemporal+"");
         this.txtCombinado5.selectAll();  // y luego en la siguiente linea pones
         
        }
        }
    }//GEN-LAST:event_txtCombinado5KeyPressed

    private void txtCombinado5KeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtCombinado5KeyReleased
        // TODO add your handling code here:
      
    }//GEN-LAST:event_txtCombinado5KeyReleased

    private void txtCombinado5KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtCombinado5KeyTyped
        // TODO add your handling code here:
           int num = evt.getKeyChar();

        if (num < '0' || num > '9') {
            evt.consume();
        }
    }//GEN-LAST:event_txtCombinado5KeyTyped

    private void txtCombinado6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtCombinado6ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtCombinado6ActionPerformed

    private void txtCombinado6KeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtCombinado6KeyPressed
        // TODO add your handling code here:
          if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            this.txtPata6.requestFocus();
            if (this.txtCombinado6.getText().isEmpty()) {
                this.total.combinado6 = 0;
            } else {
                   NumberFormat formatoNumero = NumberFormat.getNumberInstance();
            String cadena = this.txtCombinado6.getText().replace(".", "");
            this.txtCombinado6.setText(formatoNumero.format(Integer.parseInt(cadena)));
                this.total.combinado6 = Integer.parseInt(this.convertirNumeroString(this.txtCombinado6.getText()));
                this.valorTemporal= Integer.parseInt(this.convertirNumeroString(this.txtCombinado6.getText()));
            }
            this.total.total();
        } else if (evt.getKeyCode() == KeyEvent.VK_ALT) {
            this.imprimir();
        }else if(evt.getKeyCode() == KeyEvent.VK_UP){
        
        if(this.valorTemporal!=0){
         this.txtCombinado6.setText(this.valorTemporal+"");
         this.txtCombinado6.selectAll();  // y luego en la siguiente linea pones
         
        }
        }
    }//GEN-LAST:event_txtCombinado6KeyPressed

    private void txtCombinado6KeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtCombinado6KeyReleased
        // TODO add your handling code here:
         
    }//GEN-LAST:event_txtCombinado6KeyReleased

    private void txtCombinado6KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtCombinado6KeyTyped
        // TODO add your handling code here:
           int num = evt.getKeyChar();

        if (num < '0' || num > '9') {
            evt.consume();
        }
    }//GEN-LAST:event_txtCombinado6KeyTyped

    private void txtCombinado7ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtCombinado7ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtCombinado7ActionPerformed

    private void txtCombinado7KeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtCombinado7KeyPressed
        // TODO add your handling code here:
          if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            this.txtPata7.requestFocus();
            if (this.txtCombinado7.getText().isEmpty()) {
                this.total.combinado7 = 0;
            } else {
                   NumberFormat formatoNumero = NumberFormat.getNumberInstance();
            String cadena = this.txtCombinado7.getText().replace(".", "");
            this.txtCombinado7.setText(formatoNumero.format(Integer.parseInt(cadena)));
                this.total.combinado7 = Integer.parseInt(this.convertirNumeroString(this.txtCombinado7.getText()));
            this.valorTemporal= Integer.parseInt(this.convertirNumeroString(this.txtCombinado7.getText()));
            }
            this.total.total();
        } else if (evt.getKeyCode() == KeyEvent.VK_ALT) {
            this.imprimir();
        }else if(evt.getKeyCode() == KeyEvent.VK_UP){
        
        if(this.valorTemporal!=0){
         this.txtCombinado7.setText(this.valorTemporal+"");
         this.txtCombinado7.selectAll();  // y luego en la siguiente linea pones
         
        }
        }
    }//GEN-LAST:event_txtCombinado7KeyPressed

    private void txtCombinado7KeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtCombinado7KeyReleased
        // TODO add your handling code here:
       
    }//GEN-LAST:event_txtCombinado7KeyReleased

    private void txtCombinado7KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtCombinado7KeyTyped
        // TODO add your handling code here:
           int num = evt.getKeyChar();

        if (num < '0' || num > '9') {
            evt.consume();
        }
    }//GEN-LAST:event_txtCombinado7KeyTyped

    private void txtCombinado8ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtCombinado8ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtCombinado8ActionPerformed

    private void txtCombinado8KeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtCombinado8KeyPressed
        // TODO add your handling code here:
          if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            this.txtPata8.requestFocus();
            if (this.txtCombinado8.getText().isEmpty()) {
                this.total.combinado8 = 0;
            } else {
                 NumberFormat formatoNumero = NumberFormat.getNumberInstance();
            String cadena = this.txtCombinado8.getText().replace(".", "");
            this.txtCombinado8.setText(formatoNumero.format(Integer.parseInt(cadena)));
                this.total.combinado8 = Integer.parseInt(this.convertirNumeroString(this.txtCombinado8.getText()));
            this.valorTemporal=Integer.parseInt(this.convertirNumeroString(this.txtCombinado8.getText()));
            }
            this.total.total();
        } else if (evt.getKeyCode() == KeyEvent.VK_ALT) {
            this.imprimir();
        }else if(evt.getKeyCode() == KeyEvent.VK_UP){
        
        if(this.valorTemporal!=0){
         this.txtCombinado8.setText(this.valorTemporal+"");
         this.txtCombinado8.selectAll();  // y luego en la siguiente linea pones
         
        }
        }
    }//GEN-LAST:event_txtCombinado8KeyPressed

    private void txtCombinado8KeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtCombinado8KeyReleased
        // TODO add your handling code here:
          
    }//GEN-LAST:event_txtCombinado8KeyReleased

    private void txtCombinado8KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtCombinado8KeyTyped
        // TODO add your handling code here:
           int num = evt.getKeyChar();

        if (num < '0' || num > '9') {
            evt.consume();
        }
    }//GEN-LAST:event_txtCombinado8KeyTyped

    private void txtCombinado9ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtCombinado9ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtCombinado9ActionPerformed

    private void txtCombinado9KeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtCombinado9KeyPressed
        // TODO add your handling code here:
          if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            this.txtPata9.requestFocus();
            if (this.txtCombinado9.getText().isEmpty()) {
                this.total.combinado9 = 0;
            } else {
                   NumberFormat formatoNumero = NumberFormat.getNumberInstance();
            String cadena = this.txtCombinado9.getText().replace(".", "");
            this.txtCombinado9.setText(formatoNumero.format(Integer.parseInt(cadena)));
                this.total.combinado9 = Integer.parseInt(this.convertirNumeroString(this.txtCombinado9.getText()));
            this.valorTemporal=Integer.parseInt(this.convertirNumeroString(this.txtCombinado9.getText()));
            }
            this.total.total();
        } else if (evt.getKeyCode() == KeyEvent.VK_ALT) {
            this.imprimir();
        }else if(evt.getKeyCode() == KeyEvent.VK_UP){
        
        if(this.valorTemporal!=0){
         this.txtCombinado9.setText(this.valorTemporal+"");
         this.txtCombinado9.selectAll();  // y luego en la siguiente linea pones
         
        }
        }
    }//GEN-LAST:event_txtCombinado9KeyPressed

    private void txtCombinado9KeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtCombinado9KeyReleased
        // TODO add your handling code here:
         
    }//GEN-LAST:event_txtCombinado9KeyReleased

    private void txtCombinado9KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtCombinado9KeyTyped
        // TODO add your handling code here:
           int num = evt.getKeyChar();

        if (num < '0' || num > '9') {
            evt.consume();
        }
    }//GEN-LAST:event_txtCombinado9KeyTyped

    private void txtPata5KeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtPata5KeyPressed
        // TODO add your handling code here:
         if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            this.txtUña5.requestFocus();
            if (this.txtPata5.getText().isEmpty()) {
                this.total.pata5 = 0;
            } else {
                  NumberFormat formatoNumero = NumberFormat.getNumberInstance();
            String cadena = this.txtPata5.getText().replace(".", "");
            this.txtPata5.setText(formatoNumero.format(Integer.parseInt(cadena)));
            this.total.pata5 = Integer.parseInt(this.convertirNumeroString(this.txtPata5.getText()));
            this.valorTemporal = Integer.parseInt(this.convertirNumeroString(this.txtPata5.getText()));
            }
            this.total.total();
        } else if (evt.getKeyCode() == KeyEvent.VK_ALT) {
            this.imprimir();
        }else if(evt.getKeyCode() == KeyEvent.VK_UP){
        
        if(this.valorTemporal!=0){
         this.txtPata5.setText(this.valorTemporal+"");
         this.txtPata5.selectAll();  // y luego en la siguiente linea pones
         
        }
        }
    }//GEN-LAST:event_txtPata5KeyPressed

    private void txtPata5KeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtPata5KeyReleased
        // TODO add your handling code here:
       
    }//GEN-LAST:event_txtPata5KeyReleased

    private void txtPata5KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtPata5KeyTyped
        // TODO add your handling code here:
         int num = evt.getKeyChar();

        if (num < '0' || num > '9') {
            evt.consume();
        }
    }//GEN-LAST:event_txtPata5KeyTyped

    private void txtPata6KeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtPata6KeyPressed
        // TODO add your handling code here:
         if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            this.txtUña6.requestFocus();
            if (this.txtPata6.getText().isEmpty()) {
                this.total.pata6 = 0;
            } else {
                 NumberFormat formatoNumero = NumberFormat.getNumberInstance();
            String cadena = this.txtPata6.getText().replace(".", "");
            this.txtPata6.setText(formatoNumero.format(Integer.parseInt(cadena)));
                this.total.pata6 = Integer.parseInt(this.convertirNumeroString(this.txtPata6.getText()));
                this.valorTemporal= Integer.parseInt(this.convertirNumeroString(this.txtPata6.getText()));
            }
            this.total.total();
        } else if (evt.getKeyCode() == KeyEvent.VK_ALT) {
            this.imprimir();
        }else if(evt.getKeyCode() == KeyEvent.VK_UP){
        
        if(this.valorTemporal!=0){
         this.txtPata6.setText(this.valorTemporal+"");
         this.txtPata6.selectAll();  // y luego en la siguiente linea pones
         
        }
        }
    }//GEN-LAST:event_txtPata6KeyPressed

    private void txtPata6KeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtPata6KeyReleased
        // TODO add your handling code here:
    
    }//GEN-LAST:event_txtPata6KeyReleased

    private void txtPata6KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtPata6KeyTyped
 int num = evt.getKeyChar();

        if (num < '0' || num > '9') {
            evt.consume();
        }        
// TODO add your handling code here:
    }//GEN-LAST:event_txtPata6KeyTyped

    private void txtPata7KeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtPata7KeyPressed
        // TODO add your handling code here:
         if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            this.txtUña7.requestFocus();
            if (this.txtPata7.getText().isEmpty()) {
                this.total.pata7 = 0;
            } else {
                 NumberFormat formatoNumero = NumberFormat.getNumberInstance();
            String cadena = this.txtPata7.getText().replace(".", "");
            this.txtPata7.setText(formatoNumero.format(Integer.parseInt(cadena)));
                this.total.pata7 = Integer.parseInt(this.convertirNumeroString(this.txtPata7.getText()));
            this.valorTemporal = Integer.parseInt(this.convertirNumeroString(this.txtPata7.getText()));
            }
            this.total.total();
        } else if (evt.getKeyCode() == KeyEvent.VK_ALT) {
            this.imprimir();
        }else if(evt.getKeyCode() == KeyEvent.VK_UP){
        
        if(this.valorTemporal!=0){
         this.txtPata7.setText(this.valorTemporal+"");
         this.txtPata7.selectAll();  // y luego en la siguiente linea pones
         
        }
        }
    }//GEN-LAST:event_txtPata7KeyPressed

    private void txtPata7KeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtPata7KeyReleased
        // TODO add your handling code here:
       
    }//GEN-LAST:event_txtPata7KeyReleased

    private void txtPata7KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtPata7KeyTyped
        // TODO add your handling code here:
         int num = evt.getKeyChar();

        if (num < '0' || num > '9') {
            evt.consume();
        }
    }//GEN-LAST:event_txtPata7KeyTyped

    private void txtPata8KeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtPata8KeyPressed
        // TODO add your handling code here:
         if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            this.txtUña8.requestFocus();
            if (this.txtPata8.getText().isEmpty()) {
                this.total.pata8 = 0;
            } else {
                
                    NumberFormat formatoNumero = NumberFormat.getNumberInstance();
            String cadena = this.txtPata8.getText().replace(".", "");
            this.txtPata8.setText(formatoNumero.format(Integer.parseInt(cadena)));
                this.total.pata8 = Integer.parseInt(this.convertirNumeroString(this.txtPata8.getText()));
                this.valorTemporal= Integer.parseInt(this.convertirNumeroString(this.txtPata8.getText()));
            }
            this.total.total();
        } else if (evt.getKeyCode() == KeyEvent.VK_ALT) {
            this.imprimir();
        }else if(evt.getKeyCode() == KeyEvent.VK_UP){
        
        if(this.valorTemporal!=0){
         this.txtPata8.setText(this.valorTemporal+"");
         this.txtPata8.selectAll();  // y luego en la siguiente linea pones
         
        }
        }
    }//GEN-LAST:event_txtPata8KeyPressed

    private void txtPata8KeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtPata8KeyReleased
        // TODO add your handling code here:
       
    }//GEN-LAST:event_txtPata8KeyReleased

    private void txtPata8KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtPata8KeyTyped
        // TODO add your handling code here:
         int num = evt.getKeyChar();

        if (num < '0' || num > '9') {
            evt.consume();
        }
    }//GEN-LAST:event_txtPata8KeyTyped

    private void txtPata9KeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtPata9KeyPressed
        // TODO add your handling code here:
         if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            this.txtUña9.requestFocus();
            if (this.txtPata9.getText().isEmpty()) {
                this.total.pata9 = 0;
            } else {
                NumberFormat formatoNumero = NumberFormat.getNumberInstance();
            String cadena = this.txtPata9.getText().replace(".", "");
            this.txtPata9.setText(formatoNumero.format(Integer.parseInt(cadena)));
                this.total.pata9 = Integer.parseInt(this.convertirNumeroString(this.txtPata9.getText()));
                this.valorTemporal = Integer.parseInt(this.convertirNumeroString(this.txtPata9.getText()));
            }
            this.total.total();
        } else if (evt.getKeyCode() == KeyEvent.VK_ALT) {
            this.imprimir();
        }else if(evt.getKeyCode() == KeyEvent.VK_UP){
        
        if(this.valorTemporal!=0){
         this.txtPata9.setText(this.valorTemporal+"");
         this.txtPata9.selectAll();  // y luego en la siguiente linea pones
         
        }
        }
    }//GEN-LAST:event_txtPata9KeyPressed

    private void txtPata9KeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtPata9KeyReleased
        // TODO add your handling code here:
       
    }//GEN-LAST:event_txtPata9KeyReleased

    private void txtPata9KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtPata9KeyTyped
        int num = evt.getKeyChar();

        if (num < '0' || num > '9') {
            evt.consume();
        }
        // TODO add your handling code here:
    }//GEN-LAST:event_txtPata9KeyTyped

    private void txtUña5KeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtUña5KeyPressed
  
           if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            this.txtNumero6.requestFocus();
            if (this.txtUña5.getText().isEmpty()) {
                this.total.uña5 = 0;
            } else {
                 NumberFormat formatoNumero = NumberFormat.getNumberInstance();
            String cadena = this.txtUña5.getText().replace(".", "");
            this.txtUña5.setText(formatoNumero.format(Integer.parseInt(cadena)));
                this.total.uña5 = Integer.parseInt(this.convertirNumeroString(this.txtUña5.getText()));
                this.valorTemporal=Integer.parseInt(this.convertirNumeroString(this.txtUña5.getText()));
            }
            this.total.total();
        } else if (evt.getKeyCode() == KeyEvent.VK_ALT) {
            this.imprimir();
        }else if(evt.getKeyCode() == KeyEvent.VK_UP){
        
        if(this.valorTemporal!=0){
         this.txtUña5.setText(this.valorTemporal+"");
         this.txtUña5.selectAll();  // y luego en la siguiente linea pones
         
        }
        }
// TODO add your handling code here:
    }//GEN-LAST:event_txtUña5KeyPressed

    private void txtUña5KeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtUña5KeyReleased
        // TODO add your handling code here:
       
    }//GEN-LAST:event_txtUña5KeyReleased

    private void txtUña5KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtUña5KeyTyped
        // TODO add your handling code here:
         int num = evt.getKeyChar();

        if (num < '0' || num > '9') {
            evt.consume();
        }
    }//GEN-LAST:event_txtUña5KeyTyped

    private void txtUña6KeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtUña6KeyPressed
        // TODO add your handling code here:
            if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            this.txtNumero7.requestFocus();
            if (this.txtUña6.getText().isEmpty()) {
                this.total.uña6 = 0;
            } else {
                 NumberFormat formatoNumero = NumberFormat.getNumberInstance();
            String cadena = this.txtUña6.getText().replace(".", "");
            this.txtUña6.setText(formatoNumero.format(Integer.parseInt(cadena)));
                this.total.uña6 = Integer.parseInt(this.convertirNumeroString(this.txtUña6.getText()));
                this.valorTemporal= Integer.parseInt(this.convertirNumeroString(this.txtUña6.getText()));
            }
            this.total.total();
        } else if (evt.getKeyCode() == KeyEvent.VK_ALT) {
            this.imprimir();
        }else if(evt.getKeyCode() == KeyEvent.VK_UP){
        
        if(this.valorTemporal!=0){
         this.txtUña6.setText(this.valorTemporal+"");
         this.txtUña6.selectAll();  // y luego en la siguiente linea pones
         
        }
        }
    }//GEN-LAST:event_txtUña6KeyPressed

    private void txtUña6KeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtUña6KeyReleased
        // TODO add your handling code here:
      
    }//GEN-LAST:event_txtUña6KeyReleased

    private void txtUña6KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtUña6KeyTyped
 int num = evt.getKeyChar();

        if (num < '0' || num > '9') {
            evt.consume();
        }        
// TODO add your handling code here:
    }//GEN-LAST:event_txtUña6KeyTyped

    private void txtUña7KeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtUña7KeyPressed
        // TODO add your handling code here:
           if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            this.txtNumero8.requestFocus();
            if (this.txtUña7.getText().isEmpty()) {
                this.total.uña7 = 0;
            } else {
                  NumberFormat formatoNumero = NumberFormat.getNumberInstance();
            String cadena = this.txtUña7.getText().replace(".", "");
            this.txtUña7.setText(formatoNumero.format(Integer.parseInt(cadena)));
                this.total.uña7 = Integer.parseInt(this.convertirNumeroString(this.txtUña7.getText()));
                this.valorTemporal = Integer.parseInt(this.convertirNumeroString(this.txtUña7.getText()));
            }
            this.total.total();
        } else if (evt.getKeyCode() == KeyEvent.VK_ALT) {
            this.imprimir();
        }else if(evt.getKeyCode() == KeyEvent.VK_UP){
        
        if(this.valorTemporal!=0){
         this.txtUña7.setText(this.valorTemporal+"");
         this.txtUña7.selectAll();  // y luego en la siguiente linea pones
         
        }
        }
    }//GEN-LAST:event_txtUña7KeyPressed

    private void txtUña7KeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtUña7KeyReleased
        // TODO add your handling code here:
       
    }//GEN-LAST:event_txtUña7KeyReleased

    private void txtUña7KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtUña7KeyTyped
 int num = evt.getKeyChar();

        if (num < '0' || num > '9') {
            evt.consume();
        }
        // TODO add your handling code here:
    }//GEN-LAST:event_txtUña7KeyTyped

    private void txtUña8KeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtUña8KeyPressed
        // TODO add your handling code here:
          if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            this.txtNumero9.requestFocus();
            if (this.txtUña8.getText().isEmpty()) {
                this.total.uña8 = 0;
            } else {
                  NumberFormat formatoNumero = NumberFormat.getNumberInstance();
            String cadena = this.txtUña8.getText().replace(".", "");
            this.txtUña8.setText(formatoNumero.format(Integer.parseInt(cadena)));
                this.total.uña8 = Integer.parseInt(this.convertirNumeroString(this.txtUña8.getText()));
                this.valorTemporal= Integer.parseInt(this.convertirNumeroString(this.txtUña8.getText()));
            }
            this.total.total();
        } else if (evt.getKeyCode() == KeyEvent.VK_ALT) {
            this.imprimir();
        }else if(evt.getKeyCode() == KeyEvent.VK_UP){
        
        if(this.valorTemporal!=0){
         this.txtUña8.setText(this.valorTemporal+"");
         this.txtUña8.selectAll();  // y luego en la siguiente linea pones
         
        }
        }
    }//GEN-LAST:event_txtUña8KeyPressed

    private void txtUña8KeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtUña8KeyReleased
        // TODO add your handling code here:
     
    }//GEN-LAST:event_txtUña8KeyReleased

    private void txtUña8KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtUña8KeyTyped
 int num = evt.getKeyChar();

        if (num < '0' || num > '9') {
            evt.consume();
        }        
// TODO add your handling code here:
    }//GEN-LAST:event_txtUña8KeyTyped

    private void txtUña9KeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtUña9KeyPressed
        // TODO add your handling code here:
           if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
           
            if (this.txtUña9.getText().isEmpty()) {
                this.total.uña9 = 0;
            } else {
                  NumberFormat formatoNumero = NumberFormat.getNumberInstance();
            String cadena = this.txtUña9.getText().replace(".", "");
            this.txtUña9.setText(formatoNumero.format(Integer.parseInt(cadena)));
                this.total.uña9 = Integer.parseInt(this.convertirNumeroString(this.txtUña9.getText()));
                this.valorTemporal= Integer.parseInt(this.convertirNumeroString(this.txtUña9.getText()));
            }
            this.total.total();
        } else if (evt.getKeyCode() == KeyEvent.VK_ALT) {
            this.imprimir();
        }else if(evt.getKeyCode() == KeyEvent.VK_UP){
        
        if(this.valorTemporal!=0){
         this.txtUña9.setText(this.valorTemporal+"");
         this.txtUña9.selectAll();  // y luego en la siguiente linea pones
         
        }
        }
    }//GEN-LAST:event_txtUña9KeyPressed

    private void txtUña9KeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtUña9KeyReleased
        // TODO add your handling code here:
        
    }//GEN-LAST:event_txtUña9KeyReleased

    private void txtUña9KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtUña9KeyTyped
 int num = evt.getKeyChar();

        if (num < '0' || num > '9') {
            evt.consume();
        }
        // TODO add your handling code here:
    }//GEN-LAST:event_txtUña9KeyTyped

    private void txtUña4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtUña4ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtUña4ActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JComboBox cmbMoneda;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable tablaChance;
    private javax.swing.JTextField txtCombinado0;
    private javax.swing.JTextField txtCombinado1;
    private javax.swing.JTextField txtCombinado2;
    private javax.swing.JTextField txtCombinado3;
    private javax.swing.JTextField txtCombinado4;
    private javax.swing.JTextField txtCombinado5;
    private javax.swing.JTextField txtCombinado6;
    private javax.swing.JTextField txtCombinado7;
    private javax.swing.JTextField txtCombinado8;
    private javax.swing.JTextField txtCombinado9;
    private javax.swing.JTextField txtFecha;
    private javax.swing.JTextField txtNumero0;
    private javax.swing.JTextField txtNumero1;
    private javax.swing.JTextField txtNumero2;
    private javax.swing.JTextField txtNumero3;
    private javax.swing.JTextField txtNumero4;
    private javax.swing.JTextField txtNumero5;
    private javax.swing.JTextField txtNumero6;
    private javax.swing.JTextField txtNumero7;
    private javax.swing.JTextField txtNumero8;
    private javax.swing.JTextField txtNumero9;
    private javax.swing.JTextField txtPata0;
    private javax.swing.JTextField txtPata1;
    private javax.swing.JTextField txtPata2;
    private javax.swing.JTextField txtPata3;
    private javax.swing.JTextField txtPata4;
    private javax.swing.JTextField txtPata5;
    private javax.swing.JTextField txtPata6;
    private javax.swing.JTextField txtPata7;
    private javax.swing.JTextField txtPata8;
    private javax.swing.JTextField txtPata9;
    private javax.swing.JTextField txtPleno0;
    private javax.swing.JTextField txtPleno1;
    private javax.swing.JTextField txtPleno2;
    private javax.swing.JTextField txtPleno3;
    private javax.swing.JTextField txtPleno4;
    private javax.swing.JTextField txtPleno5;
    private javax.swing.JTextField txtPleno6;
    private javax.swing.JTextField txtPleno7;
    private javax.swing.JTextField txtPleno8;
    private javax.swing.JTextField txtPleno9;
    private javax.swing.JTextField txtTotal;
    private javax.swing.JTextField txtUsuario;
    private javax.swing.JTextField txtUña0;
    private javax.swing.JTextField txtUña1;
    private javax.swing.JTextField txtUña2;
    private javax.swing.JTextField txtUña3;
    private javax.swing.JTextField txtUña4;
    private javax.swing.JTextField txtUña5;
    private javax.swing.JTextField txtUña6;
    private javax.swing.JTextField txtUña7;
    private javax.swing.JTextField txtUña8;
    private javax.swing.JTextField txtUña9;
    // End of variables declaration//GEN-END:variables
}
